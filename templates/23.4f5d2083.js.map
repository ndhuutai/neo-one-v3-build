{"version":3,"sources":["webpack:////Users/tainguyen/neo-one/common/temp/node_modules/monaco-editor/esm/vs/language/json/languageFeatures.js","webpack:////Users/tainguyen/neo-one/common/temp/node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-languageserver-types/main.js","webpack:////Users/tainguyen/neo-one/common/temp/node_modules/monaco-editor/esm/vs/language/json/workerManager.js","webpack:////Users/tainguyen/neo-one/common/temp/node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/parser.js","webpack:////Users/tainguyen/neo-one/common/temp/node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/scanner.js","webpack:////Users/tainguyen/neo-one/common/temp/node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/main.js","webpack:////Users/tainguyen/neo-one/common/temp/node_modules/monaco-editor/esm/vs/language/json/tokenization.js","webpack:////Users/tainguyen/neo-one/common/temp/node_modules/monaco-editor/esm/vs/language/json/jsonMode.js"],"names":["Range","monaco","Uri","DiagnosticsAdapter","_languageId","_worker","defaults","_this","this","_disposables","_listener","Object","create","onModelAdd","model","handle","modeId","getModeId","uri","toString","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","editor","setModelMarkers","uriStr","listener","dispose","push","onDidCreateModel","onWillDisposeModel","_resetSchema","onDidChangeModelLanguage","event","onDidChange","_","getModels","forEach","key","prototype","d","resource","then","worker","resetSchema","languageId","doValidation","diagnostics","markers","map","diag","code","String","severity","toSeverity","startLineNumber","range","start","line","startColumn","character","endLineNumber","end","endColumn","message","source","toDiagnostics","getModel","undefined","err","console","error","lsSeverity","Error","MarkerSeverity","Warning","Information","Info","Hint","fromPosition","position","column","lineNumber","fromRange","toRange","toCompletionItemKind","kind","mItemKind","languages","CompletionItemKind","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","Color","File","Reference","toTextEdit","textEdit","text","newText","CompletionAdapter","defineProperty","get","enumerable","configurable","provideCompletionItems","context","token","doComplete","info","wordInfo","getWordUntilPosition","wordRange","items","entry","item","label","insertText","sortText","filterText","documentation","detail","additionalTextEdits","insertTextFormat","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","isIncomplete","suggestions","toMarkdownString","value","thing","isMarkupContent","replace","language","toMarkedStringArray","contents","Array","isArray","HoverAdapter","provideHover","doHover","toSymbolKind","mKind","SymbolKind","Namespace","Package","Constant","Number","Boolean","DocumentSymbolAdapter","provideDocumentSymbols","findDocumentSymbols","name","containerName","location","selectionRange","fromFormattingOptions","options","tabSize","insertSpaces","DocumentFormattingEditProvider","provideDocumentFormattingEdits","format","edits","length","DocumentRangeFormattingEditProvider","provideDocumentRangeFormattingEdits","DocumentColorAdapter","provideDocumentColors","findDocumentColors","infos","color","provideColorPresentations","getColorPresentations","presentations","presentation","FoldingRangeAdapter","provideFoldingRanges","ranges","result","startLine","endLine","Comment","FoldingRangeKind","Imports","Region","toFoldingRangeKind","Position","Location","LocationLink","ColorInformation","ColorPresentation","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","Diagnostic","Command","TextEdit","TextDocumentEdit","CreateFile","RenameFile","DeleteFile","WorkspaceEdit","is","candidate","Is","objectLiteral","number","one","two","three","four","defined","string","targetUri","targetRange","targetSelectionRange","originSelectionRange","red","green","blue","alpha","typedArray","startCharacter","endCharacter","relatedInformation","title","command","args","_i","arguments","insert","del","textDocument","VersionedTextDocumentIdentifier","overwrite","ignoreIfExists","boolean","oldUri","newUri","recursive","ignoreIfNotExists","changes","documentChanges","every","change","TextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","InsertTextFormat","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolInformation","TextEditChangeImpl","delete","add","edit","all","clear","splice","WorkspaceChange","workspaceEdit","_textEditChanges","_workspaceEdit","textEditChange","keys","getTextEditChange","textDocumentEdit","createFile","checkDocumentChanges","renameFile","deleteFile","version","PlainText","Markdown","Folder","EnumMember","Struct","Event","Operator","TypeParameter","fromPlainText","plainText","parameters","Read","Write","Key","Null","CodeActionKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentSymbol","children","deprecated","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","only","commandOrEdit","data","DocumentLink","target","TextDocument","TextDocumentSaveReason","content","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","compare","p","left","slice","right","leftIdx","rightIdx","i","ret","a","b","diff","lastModifiedOffset","e","startOffset","endOffset","substring","Manual","AfterDelay","FocusOut","_uri","_version","_content","_lineOffsets","update","getLineOffsets","lineOffsets","isLineStart","ch","charAt","offset","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","call","check","ParseOptions","WorkerManager","_defaults","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","_stopWorker","_client","clearInterval","Date","now","_getClient","createWebWorker","moduleId","createData","languageSettings","diagnosticsOptions","enableSchemaRequest","getProxy","getLanguageServiceWorker","resources","client","withSyncedResources","createScanner","ignoreTrivia","pos","len","tokenOffset","scanError","scanHexDigits","count","exact","digits","charCodeAt","scanNext","isWhiteSpace","fromCharCode","isLineBreak","ch_1","scanString","safeLength","commentClosed","isDigit","scanNumber","isUnknownContentCharacter","setPosition","newPosition","getPosition","scan","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenError","DEFAULT","allowTrailingComma","createTokenizationSupport","supportComments","getInitialState","JSONState","tokenize","state","offsetDelta","stopAtOffset","comments","numberOfInsertedCharacters","adjustOffset","scanner","lastWasColon","tokens","endState","clone","type","substr","getStateData","startIndex","scopes","_state","equals","other","setStateData","setupMode","disposables","uris","apply","registerCompletionItemProvider","languageFeatures","registerHoverProvider","registerDocumentSymbolProvider","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","setTokensProvider","setLanguageConfiguration","richEditConfiguration","registerColorProvider","registerFoldingRangeProvider","wordPattern","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn"],"mappings":"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","file":"templates/23.4f5d2083.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\nvar Uri = monaco.Uri;\nvar Range = monaco.Range;\n// --- diagnostics --- ---\nvar DiagnosticsAdapter = /** @class */ (function () {\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\n        var _this = this;\n        this._languageId = _languageId;\n        this._worker = _worker;\n        this._disposables = [];\n        this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            var modeId = model.getModeId();\n            if (modeId !== _this._languageId) {\n                return;\n            }\n            var handle;\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\n            });\n            _this._doValidate(model.uri, modeId);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\n            var uriStr = model.uri.toString();\n            var listener = _this._listener[uriStr];\n            if (listener) {\n                listener.dispose();\n                delete _this._listener[uriStr];\n            }\n        };\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\n            onModelRemoved(model);\n            _this._resetSchema(model.uri);\n        }));\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n            _this._resetSchema(event.model.uri);\n        }));\n        this._disposables.push(defaults.onDidChange(function (_) {\n            monaco.editor.getModels().forEach(function (model) {\n                if (model.getModeId() === _this._languageId) {\n                    onModelRemoved(model);\n                    onModelAdd(model);\n                }\n            });\n        }));\n        this._disposables.push({\n            dispose: function () {\n                monaco.editor.getModels().forEach(onModelRemoved);\n                for (var key in _this._listener) {\n                    _this._listener[key].dispose();\n                }\n            }\n        });\n        monaco.editor.getModels().forEach(onModelAdd);\n    }\n    DiagnosticsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnosticsAdapter.prototype._resetSchema = function (resource) {\n        this._worker().then(function (worker) {\n            worker.resetSchema(resource.toString());\n        });\n    };\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\n        this._worker(resource).then(function (worker) {\n            return worker.doValidation(resource.toString()).then(function (diagnostics) {\n                var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\n                var model = monaco.editor.getModel(resource);\n                if (model && model.getModeId() === languageId) {\n                    monaco.editor.setModelMarkers(model, languageId, markers);\n                }\n            });\n        }).then(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    return DiagnosticsAdapter;\n}());\nexport { DiagnosticsAdapter };\nfunction toSeverity(lsSeverity) {\n    switch (lsSeverity) {\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\n        default:\n            return monaco.MarkerSeverity.Info;\n    }\n}\nfunction toDiagnostics(resource, diag) {\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n    return {\n        severity: toSeverity(diag.severity),\n        startLineNumber: diag.range.start.line + 1,\n        startColumn: diag.range.start.character + 1,\n        endLineNumber: diag.range.end.line + 1,\n        endColumn: diag.range.end.character + 1,\n        message: diag.message,\n        code: code,\n        source: diag.source\n    };\n}\n// --- completion ------\nfunction fromPosition(position) {\n    if (!position) {\n        return void 0;\n    }\n    return { character: position.column - 1, line: position.lineNumber - 1 };\n}\nfunction fromRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return { start: { line: range.startLineNumber - 1, character: range.startColumn - 1 }, end: { line: range.endLineNumber - 1, character: range.endColumn - 1 } };\n}\nfunction toRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction toCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\n        case ls.CompletionItemKind.File: return mItemKind.File;\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\n    }\n    return mItemKind.Property;\n}\nfunction fromCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case mItemKind.Text: return ls.CompletionItemKind.Text;\n        case mItemKind.Method: return ls.CompletionItemKind.Method;\n        case mItemKind.Function: return ls.CompletionItemKind.Function;\n        case mItemKind.Constructor: return ls.CompletionItemKind.Constructor;\n        case mItemKind.Field: return ls.CompletionItemKind.Field;\n        case mItemKind.Variable: return ls.CompletionItemKind.Variable;\n        case mItemKind.Class: return ls.CompletionItemKind.Class;\n        case mItemKind.Interface: return ls.CompletionItemKind.Interface;\n        case mItemKind.Module: return ls.CompletionItemKind.Module;\n        case mItemKind.Property: return ls.CompletionItemKind.Property;\n        case mItemKind.Unit: return ls.CompletionItemKind.Unit;\n        case mItemKind.Value: return ls.CompletionItemKind.Value;\n        case mItemKind.Enum: return ls.CompletionItemKind.Enum;\n        case mItemKind.Keyword: return ls.CompletionItemKind.Keyword;\n        case mItemKind.Snippet: return ls.CompletionItemKind.Snippet;\n        case mItemKind.Color: return ls.CompletionItemKind.Color;\n        case mItemKind.File: return ls.CompletionItemKind.File;\n        case mItemKind.Reference: return ls.CompletionItemKind.Reference;\n    }\n    return ls.CompletionItemKind.Property;\n}\nfunction toTextEdit(textEdit) {\n    if (!textEdit) {\n        return void 0;\n    }\n    return {\n        range: toRange(textEdit.range),\n        text: textEdit.newText\n    };\n}\nvar CompletionAdapter = /** @class */ (function () {\n    function CompletionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return [' ', ':'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, context, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.doComplete(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var wordInfo = model.getWordUntilPosition(position);\n            var wordRange = new Range(position.lineNumber, wordInfo.startColumn, position.lineNumber, wordInfo.endColumn);\n            var items = info.items.map(function (entry) {\n                var item = {\n                    label: entry.label,\n                    insertText: entry.insertText || entry.label,\n                    sortText: entry.sortText,\n                    filterText: entry.filterText,\n                    documentation: entry.documentation,\n                    detail: entry.detail,\n                    range: wordRange,\n                    kind: toCompletionItemKind(entry.kind),\n                };\n                if (entry.textEdit) {\n                    item.range = toRange(entry.textEdit.range);\n                    item.insertText = entry.textEdit.newText;\n                }\n                if (entry.additionalTextEdits) {\n                    item.additionalTextEdits = entry.additionalTextEdits.map(toTextEdit);\n                }\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                    item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\n                }\n                return item;\n            });\n            return {\n                isIncomplete: info.isIncomplete,\n                suggestions: items\n            };\n        });\n    };\n    return CompletionAdapter;\n}());\nexport { CompletionAdapter };\nfunction isMarkupContent(thing) {\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\nfunction toMarkdownString(entry) {\n    if (typeof entry === 'string') {\n        return {\n            value: entry\n        };\n    }\n    if (isMarkupContent(entry)) {\n        if (entry.kind === 'plaintext') {\n            return {\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n            };\n        }\n        return {\n            value: entry.value\n        };\n    }\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\n}\nfunction toMarkedStringArray(contents) {\n    if (!contents) {\n        return void 0;\n    }\n    if (Array.isArray(contents)) {\n        return contents.map(toMarkdownString);\n    }\n    return [toMarkdownString(contents)];\n}\n// --- hover ------\nvar HoverAdapter = /** @class */ (function () {\n    function HoverAdapter(_worker) {\n        this._worker = _worker;\n    }\n    HoverAdapter.prototype.provideHover = function (model, position, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.doHover(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            return {\n                range: toRange(info.range),\n                contents: toMarkedStringArray(info.contents)\n            };\n        });\n    };\n    return HoverAdapter;\n}());\nexport { HoverAdapter };\n// --- definition ------\nfunction toLocation(location) {\n    return {\n        uri: Uri.parse(location.uri),\n        range: toRange(location.range)\n    };\n}\n// --- document symbols ------\nfunction toSymbolKind(kind) {\n    var mKind = monaco.languages.SymbolKind;\n    switch (kind) {\n        case ls.SymbolKind.File: return mKind.Array;\n        case ls.SymbolKind.Module: return mKind.Module;\n        case ls.SymbolKind.Namespace: return mKind.Namespace;\n        case ls.SymbolKind.Package: return mKind.Package;\n        case ls.SymbolKind.Class: return mKind.Class;\n        case ls.SymbolKind.Method: return mKind.Method;\n        case ls.SymbolKind.Property: return mKind.Property;\n        case ls.SymbolKind.Field: return mKind.Field;\n        case ls.SymbolKind.Constructor: return mKind.Constructor;\n        case ls.SymbolKind.Enum: return mKind.Enum;\n        case ls.SymbolKind.Interface: return mKind.Interface;\n        case ls.SymbolKind.Function: return mKind.Function;\n        case ls.SymbolKind.Variable: return mKind.Variable;\n        case ls.SymbolKind.Constant: return mKind.Constant;\n        case ls.SymbolKind.String: return mKind.String;\n        case ls.SymbolKind.Number: return mKind.Number;\n        case ls.SymbolKind.Boolean: return mKind.Boolean;\n        case ls.SymbolKind.Array: return mKind.Array;\n    }\n    return mKind.Function;\n}\nvar DocumentSymbolAdapter = /** @class */ (function () {\n    function DocumentSymbolAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentSymbolAdapter.prototype.provideDocumentSymbols = function (model, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.findDocumentSymbols(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                name: item.name,\n                detail: '',\n                containerName: item.containerName,\n                kind: toSymbolKind(item.kind),\n                range: toRange(item.location.range),\n                selectionRange: toRange(item.location.range)\n            }); });\n        });\n    };\n    return DocumentSymbolAdapter;\n}());\nexport { DocumentSymbolAdapter };\nfunction fromFormattingOptions(options) {\n    return {\n        tabSize: options.tabSize,\n        insertSpaces: options.insertSpaces\n    };\n}\nvar DocumentFormattingEditProvider = /** @class */ (function () {\n    function DocumentFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        });\n    };\n    return DocumentFormattingEditProvider;\n}());\nexport { DocumentFormattingEditProvider };\nvar DocumentRangeFormattingEditProvider = /** @class */ (function () {\n    function DocumentRangeFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        });\n    };\n    return DocumentRangeFormattingEditProvider;\n}());\nexport { DocumentRangeFormattingEditProvider };\nvar DocumentColorAdapter = /** @class */ (function () {\n    function DocumentColorAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentColorAdapter.prototype.provideDocumentColors = function (model, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.findDocumentColors(resource.toString()); }).then(function (infos) {\n            if (!infos) {\n                return;\n            }\n            return infos.map(function (item) { return ({\n                color: item.color,\n                range: toRange(item.range)\n            }); });\n        });\n    };\n    DocumentColorAdapter.prototype.provideColorPresentations = function (model, info, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.getColorPresentations(resource.toString(), info.color, fromRange(info.range)); }).then(function (presentations) {\n            if (!presentations) {\n                return;\n            }\n            return presentations.map(function (presentation) {\n                var item = {\n                    label: presentation.label,\n                };\n                if (presentation.textEdit) {\n                    item.textEdit = toTextEdit(presentation.textEdit);\n                }\n                if (presentation.additionalTextEdits) {\n                    item.additionalTextEdits = presentation.additionalTextEdits.map(toTextEdit);\n                }\n                return item;\n            });\n        });\n    };\n    return DocumentColorAdapter;\n}());\nexport { DocumentColorAdapter };\nvar FoldingRangeAdapter = /** @class */ (function () {\n    function FoldingRangeAdapter(_worker) {\n        this._worker = _worker;\n    }\n    FoldingRangeAdapter.prototype.provideFoldingRanges = function (model, context, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.provideFoldingRanges(resource.toString(), context); }).then(function (ranges) {\n            if (!ranges) {\n                return;\n            }\n            return ranges.map(function (range) {\n                var result = {\n                    start: range.startLine + 1,\n                    end: range.endLine + 1\n                };\n                if (typeof range.kind !== 'undefined') {\n                    result.kind = toFoldingRangeKind(range.kind);\n                }\n                return result;\n            });\n        });\n    };\n    return FoldingRangeAdapter;\n}());\nexport { FoldingRangeAdapter };\nfunction toFoldingRangeKind(kind) {\n    switch (kind) {\n        case ls.FoldingRangeKind.Comment: return monaco.languages.FoldingRangeKind.Comment;\n        case ls.FoldingRangeKind.Imports: return monaco.languages.FoldingRangeKind.Imports;\n        case ls.FoldingRangeKind.Region: return monaco.languages.FoldingRangeKind.Region;\n    }\n    return void 0;\n}\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nexport var Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nexport var Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nexport var Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The LocationLink namespace provides helper functions to work with\r\n * [LocationLink](#LocationLink) literals.\r\n */\r\nexport var LocationLink;\r\n(function (LocationLink) {\r\n    /**\r\n     * Creates a LocationLink literal.\r\n     * @param targetUri The definition's uri.\r\n     * @param targetRange The full range of the definition.\r\n     * @param targetSelectionRange The span of the symbol definition at the target.\r\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\r\n     */\r\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\r\n        return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };\r\n    }\r\n    LocationLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [LocationLink](#LocationLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\r\n            && (Range.is(candidate.targetSelectionRange) || Is.undefined(candidate.targetSelectionRange))\r\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\r\n    }\r\n    LocationLink.is = is;\r\n})(LocationLink || (LocationLink = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nexport var Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nexport var ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nexport var ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nexport var FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nexport var FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nexport var DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nexport var DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nexport var Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nexport var Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nexport var TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nexport var TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nexport var CreateFile;\r\n(function (CreateFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'create',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    CreateFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    CreateFile.is = is;\r\n})(CreateFile || (CreateFile = {}));\r\nexport var RenameFile;\r\n(function (RenameFile) {\r\n    function create(oldUri, newUri, options) {\r\n        var result = {\r\n            kind: 'rename',\r\n            oldUri: oldUri,\r\n            newUri: newUri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    RenameFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    RenameFile.is = is;\r\n})(RenameFile || (RenameFile = {}));\r\nexport var DeleteFile;\r\n(function (DeleteFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'delete',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.recursive !== void 0 || options.ignoreIfNotExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    DeleteFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.recursive === void 0 || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === void 0 || Is.boolean(candidate.options.ignoreIfNotExists))));\r\n    }\r\n    DeleteFile.is = is;\r\n})(DeleteFile || (DeleteFile = {}));\r\nexport var WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || candidate.documentChanges.every(function (change) {\r\n                if (Is.string(change.kind)) {\r\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\r\n                }\r\n                else {\r\n                    return TextDocumentEdit.is(change);\r\n                }\r\n            }));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (change) {\r\n                    if (TextDocumentEdit.is(change)) {\r\n                        var textEditChange = new TextEditChangeImpl(change.edits);\r\n                        _this._textEditChanges[change.textDocument.uri] = textEditChange;\r\n                    }\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    WorkspaceChange.prototype.createFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(CreateFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.renameFile = function (oldUri, newUri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(RenameFile.create(oldUri, newUri, options));\r\n    };\r\n    WorkspaceChange.prototype.deleteFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(DeleteFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.checkDocumentChanges = function () {\r\n        if (!this._workspaceEdit || !this._workspaceEdit.documentChanges) {\r\n            throw new Error('Workspace edit is not configured for document changes.');\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\nexport { WorkspaceChange };\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nexport var TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nexport var VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.number(candidate.version));\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nexport var TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nexport var MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nexport var MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nexport var InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nexport var CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nexport var CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nexport var MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nexport var Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nexport var ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n    ;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nexport var SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nexport var DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\nexport var SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\n/**\r\n * Represents programming constructs like variables, classes, interfaces etc.\r\n * that appear in a document. Document symbols can be hierarchical and they\r\n * have two ranges: one that encloses its definition and one that points to\r\n * its most interesting range, e.g. the range of an identifier.\r\n */\r\nvar DocumentSymbol = /** @class */ (function () {\r\n    function DocumentSymbol() {\r\n    }\r\n    return DocumentSymbol;\r\n}());\r\nexport { DocumentSymbol };\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.detail === void 0 || Is.string(candidate.detail)) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nexport var CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nexport var CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nexport var CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void null) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nexport var CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data))\r\n            result.data = data;\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nexport var FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * A document link is a range in a text document that links to an internal or external resource, like another\r\n * text document or a web site.\r\n */\r\nvar DocumentLink = /** @class */ (function () {\r\n    function DocumentLink() {\r\n    }\r\n    return DocumentLink;\r\n}());\r\nexport { DocumentLink };\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\r\nexport var TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Overlapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nexport var TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = null;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = null;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === null) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(defaults) {\n        var _this = this;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `JSONWorker` instance\n                moduleId: 'vs/language/json/jsonWorker',\n                label: this._defaults.languageId,\n                // passed in to the create() method\n                createData: {\n                    languageSettings: this._defaults.diagnosticsOptions,\n                    languageId: this._defaults.languageId,\n                    enableSchemaRequest: this._defaults.diagnosticsOptions.enableSchemaRequest\n                }\n            });\n            this._client = this._worker.getProxy();\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; });\n    };\n    return WorkerManager;\n}());\nexport { WorkerManager };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner.js';\nvar ParseOptions;\n(function (ParseOptions) {\n    ParseOptions.DEFAULT = {\n        allowTrailingComma: false\n    };\n})(ParseOptions || (ParseOptions = {}));\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text, position) {\n    var segments = []; // strings or numbers\n    var earlyReturnException = new Object();\n    var previousNode = void 0;\n    var previousNodeInst = {\n        value: {},\n        offset: 0,\n        length: 0,\n        type: 'object',\n        parent: void 0\n    };\n    var isAtPropertyKey = false;\n    function setPreviousNode(value, offset, length, type) {\n        previousNodeInst.value = value;\n        previousNodeInst.offset = offset;\n        previousNodeInst.length = length;\n        previousNodeInst.type = type;\n        previousNodeInst.colonOffset = void 0;\n        previousNode = previousNodeInst;\n    }\n    try {\n        visit(text, {\n            onObjectBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                isAtPropertyKey = position > offset;\n                segments.push(''); // push a placeholder (will be replaced)\n            },\n            onObjectProperty: function (name, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(name, offset, length, 'property');\n                segments[segments.length - 1] = name;\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onObjectEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.pop();\n            },\n            onArrayBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.push(0);\n            },\n            onArrayEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.pop();\n            },\n            onLiteralValue: function (value, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(value, offset, length, getLiteralNodeType(value));\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onSeparator: function (sep, offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                if (sep === ':' && previousNode && previousNode.type === 'property') {\n                    previousNode.colonOffset = offset;\n                    isAtPropertyKey = false;\n                    previousNode = void 0;\n                }\n                else if (sep === ',') {\n                    var last = segments[segments.length - 1];\n                    if (typeof last === 'number') {\n                        segments[segments.length - 1] = last + 1;\n                    }\n                    else {\n                        isAtPropertyKey = true;\n                        segments[segments.length - 1] = '';\n                    }\n                    previousNode = void 0;\n                }\n            }\n        });\n    }\n    catch (e) {\n        if (e !== earlyReturnException) {\n            throw e;\n        }\n    }\n    return {\n        path: segments,\n        previousNode: previousNode,\n        isAtPropertyKey: isAtPropertyKey,\n        matches: function (pattern) {\n            var k = 0;\n            for (var i = 0; k < pattern.length && i < segments.length; i++) {\n                if (pattern[k] === segments[i] || pattern[k] === '*') {\n                    k++;\n                }\n                else if (pattern[k] !== '**') {\n                    return false;\n                }\n            }\n            return k === pattern.length;\n        }\n    };\n}\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    if (options === void 0) { options = ParseOptions.DEFAULT; }\n    var currentProperty = null;\n    var currentParent = [];\n    var previousParents = [];\n    function onValue(value) {\n        if (Array.isArray(currentParent)) {\n            currentParent.push(value);\n        }\n        else if (currentProperty) {\n            currentParent[currentProperty] = value;\n        }\n    }\n    var visitor = {\n        onObjectBegin: function () {\n            var object = {};\n            onValue(object);\n            previousParents.push(currentParent);\n            currentParent = object;\n            currentProperty = null;\n        },\n        onObjectProperty: function (name) {\n            currentProperty = name;\n        },\n        onObjectEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onArrayBegin: function () {\n            var array = [];\n            onValue(array);\n            previousParents.push(currentParent);\n            currentParent = array;\n            currentProperty = null;\n        },\n        onArrayEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onLiteralValue: onValue,\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    return currentParent[0];\n}\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    if (options === void 0) { options = ParseOptions.DEFAULT; }\n    var currentParent = { type: 'array', offset: -1, length: -1, children: [], parent: void 0 }; // artificial root\n    function ensurePropertyComplete(endOffset) {\n        if (currentParent.type === 'property') {\n            currentParent.length = endOffset - currentParent.offset;\n            currentParent = currentParent.parent;\n        }\n    }\n    function onValue(valueNode) {\n        currentParent.children.push(valueNode);\n        return valueNode;\n    }\n    var visitor = {\n        onObjectBegin: function (offset) {\n            currentParent = onValue({ type: 'object', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onObjectProperty: function (name, offset, length) {\n            currentParent = onValue({ type: 'property', offset: offset, length: -1, parent: currentParent, children: [] });\n            currentParent.children.push({ type: 'string', value: name, offset: offset, length: length, parent: currentParent });\n        },\n        onObjectEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onArrayBegin: function (offset, length) {\n            currentParent = onValue({ type: 'array', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onArrayEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onLiteralValue: function (value, offset, length) {\n            onValue({ type: getLiteralNodeType(value), offset: offset, length: length, parent: currentParent, value: value });\n            ensurePropertyComplete(offset + length);\n        },\n        onSeparator: function (sep, offset, length) {\n            if (currentParent.type === 'property') {\n                if (sep === ':') {\n                    currentParent.colonOffset = offset;\n                }\n                else if (sep === ',') {\n                    ensurePropertyComplete(offset);\n                }\n            }\n        },\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    var result = currentParent.children[0];\n    if (result) {\n        delete result.parent;\n    }\n    return result;\n}\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root, path) {\n    if (!root) {\n        return void 0;\n    }\n    var node = root;\n    for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {\n        var segment = path_1[_i];\n        if (typeof segment === 'string') {\n            if (node.type !== 'object' || !Array.isArray(node.children)) {\n                return void 0;\n            }\n            var found = false;\n            for (var _a = 0, _b = node.children; _a < _b.length; _a++) {\n                var propertyNode = _b[_a];\n                if (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n                    node = propertyNode.children[1];\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                return void 0;\n            }\n        }\n        else {\n            var index = segment;\n            if (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n                return void 0;\n            }\n            node = node.children[index];\n        }\n    }\n    return node;\n}\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node) {\n    if (!node.parent || !node.parent.children) {\n        return [];\n    }\n    var path = getNodePath(node.parent);\n    if (node.parent.type === 'property') {\n        var key = node.parent.children[0].value;\n        path.push(key);\n    }\n    else if (node.parent.type === 'array') {\n        var index = node.parent.children.indexOf(node);\n        if (index !== -1) {\n            path.push(index);\n        }\n    }\n    return path;\n}\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node) {\n    switch (node.type) {\n        case 'array':\n            return node.children.map(getNodeValue);\n        case 'object':\n            var obj = Object.create(null);\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var prop = _a[_i];\n                var valueNode = prop.children[1];\n                if (valueNode) {\n                    obj[prop.children[0].value] = getNodeValue(valueNode);\n                }\n            }\n            return obj;\n        case 'null':\n        case 'string':\n        case 'number':\n        case 'boolean':\n            return node.value;\n        default:\n            return void 0;\n    }\n}\nexport function contains(node, offset, includeRightBound) {\n    if (includeRightBound === void 0) { includeRightBound = false; }\n    return (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node, offset, includeRightBound) {\n    if (includeRightBound === void 0) { includeRightBound = false; }\n    if (contains(node, offset, includeRightBound)) {\n        var children = node.children;\n        if (Array.isArray(children)) {\n            for (var i = 0; i < children.length && children[i].offset <= offset; i++) {\n                var item = findNodeAtOffset(children[i], offset, includeRightBound);\n                if (item) {\n                    return item;\n                }\n            }\n        }\n        return node;\n    }\n    return void 0;\n}\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text, visitor, options) {\n    if (options === void 0) { options = ParseOptions.DEFAULT; }\n    var _scanner = createScanner(text, false);\n    function toNoArgVisit(visitFunction) {\n        return visitFunction ? function () { return visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength()); } : function () { return true; };\n    }\n    function toOneArgVisit(visitFunction) {\n        return visitFunction ? function (arg) { return visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength()); } : function () { return true; };\n    }\n    var onObjectBegin = toNoArgVisit(visitor.onObjectBegin), onObjectProperty = toOneArgVisit(visitor.onObjectProperty), onObjectEnd = toNoArgVisit(visitor.onObjectEnd), onArrayBegin = toNoArgVisit(visitor.onArrayBegin), onArrayEnd = toNoArgVisit(visitor.onArrayEnd), onLiteralValue = toOneArgVisit(visitor.onLiteralValue), onSeparator = toOneArgVisit(visitor.onSeparator), onComment = toNoArgVisit(visitor.onComment), onError = toOneArgVisit(visitor.onError);\n    var disallowComments = options && options.disallowComments;\n    var allowTrailingComma = options && options.allowTrailingComma;\n    function scanNext() {\n        while (true) {\n            var token = _scanner.scan();\n            switch (_scanner.getTokenError()) {\n                case 4 /* InvalidUnicode */:\n                    handleError(14 /* InvalidUnicode */);\n                    break;\n                case 5 /* InvalidEscapeCharacter */:\n                    handleError(15 /* InvalidEscapeCharacter */);\n                    break;\n                case 3 /* UnexpectedEndOfNumber */:\n                    handleError(13 /* UnexpectedEndOfNumber */);\n                    break;\n                case 1 /* UnexpectedEndOfComment */:\n                    if (!disallowComments) {\n                        handleError(11 /* UnexpectedEndOfComment */);\n                    }\n                    break;\n                case 2 /* UnexpectedEndOfString */:\n                    handleError(12 /* UnexpectedEndOfString */);\n                    break;\n                case 6 /* InvalidCharacter */:\n                    handleError(16 /* InvalidCharacter */);\n                    break;\n            }\n            switch (token) {\n                case 12 /* LineCommentTrivia */:\n                case 13 /* BlockCommentTrivia */:\n                    if (disallowComments) {\n                        handleError(10 /* InvalidCommentToken */);\n                    }\n                    else {\n                        onComment();\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    handleError(1 /* InvalidSymbol */);\n                    break;\n                case 15 /* Trivia */:\n                case 14 /* LineBreakTrivia */:\n                    break;\n                default:\n                    return token;\n            }\n        }\n    }\n    function handleError(error, skipUntilAfter, skipUntil) {\n        if (skipUntilAfter === void 0) { skipUntilAfter = []; }\n        if (skipUntil === void 0) { skipUntil = []; }\n        onError(error);\n        if (skipUntilAfter.length + skipUntil.length > 0) {\n            var token = _scanner.getToken();\n            while (token !== 17 /* EOF */) {\n                if (skipUntilAfter.indexOf(token) !== -1) {\n                    scanNext();\n                    break;\n                }\n                else if (skipUntil.indexOf(token) !== -1) {\n                    break;\n                }\n                token = scanNext();\n            }\n        }\n    }\n    function parseString(isValue) {\n        var value = _scanner.getTokenValue();\n        if (isValue) {\n            onLiteralValue(value);\n        }\n        else {\n            onObjectProperty(value);\n        }\n        scanNext();\n        return true;\n    }\n    function parseLiteral() {\n        switch (_scanner.getToken()) {\n            case 11 /* NumericLiteral */:\n                var value = 0;\n                try {\n                    value = JSON.parse(_scanner.getTokenValue());\n                    if (typeof value !== 'number') {\n                        handleError(2 /* InvalidNumberFormat */);\n                        value = 0;\n                    }\n                }\n                catch (e) {\n                    handleError(2 /* InvalidNumberFormat */);\n                }\n                onLiteralValue(value);\n                break;\n            case 7 /* NullKeyword */:\n                onLiteralValue(null);\n                break;\n            case 8 /* TrueKeyword */:\n                onLiteralValue(true);\n                break;\n            case 9 /* FalseKeyword */:\n                onLiteralValue(false);\n                break;\n            default:\n                return false;\n        }\n        scanNext();\n        return true;\n    }\n    function parseProperty() {\n        if (_scanner.getToken() !== 10 /* StringLiteral */) {\n            handleError(3 /* PropertyNameExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            return false;\n        }\n        parseString(false);\n        if (_scanner.getToken() === 6 /* ColonToken */) {\n            onSeparator(':');\n            scanNext(); // consume colon\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n        }\n        else {\n            handleError(5 /* ColonExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n        }\n        return true;\n    }\n    function parseObject() {\n        onObjectBegin();\n        scanNext(); // consume open brace\n        var needsComma = false;\n        while (_scanner.getToken() !== 2 /* CloseBraceToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 2 /* CloseBraceToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseProperty()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onObjectEnd();\n        if (_scanner.getToken() !== 2 /* CloseBraceToken */) {\n            handleError(7 /* CloseBraceExpected */, [2 /* CloseBraceToken */], []);\n        }\n        else {\n            scanNext(); // consume close brace\n        }\n        return true;\n    }\n    function parseArray() {\n        onArrayBegin();\n        scanNext(); // consume open bracket\n        var needsComma = false;\n        while (_scanner.getToken() !== 4 /* CloseBracketToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 4 /* CloseBracketToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [4 /* CloseBracketToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onArrayEnd();\n        if (_scanner.getToken() !== 4 /* CloseBracketToken */) {\n            handleError(8 /* CloseBracketExpected */, [4 /* CloseBracketToken */], []);\n        }\n        else {\n            scanNext(); // consume close bracket\n        }\n        return true;\n    }\n    function parseValue() {\n        switch (_scanner.getToken()) {\n            case 3 /* OpenBracketToken */:\n                return parseArray();\n            case 1 /* OpenBraceToken */:\n                return parseObject();\n            case 10 /* StringLiteral */:\n                return parseString(true);\n            default:\n                return parseLiteral();\n        }\n    }\n    scanNext();\n    if (_scanner.getToken() === 17 /* EOF */) {\n        return true;\n    }\n    if (!parseValue()) {\n        handleError(4 /* ValueExpected */, [], []);\n        return false;\n    }\n    if (_scanner.getToken() !== 17 /* EOF */) {\n        handleError(9 /* EndOfFileExpected */, [], []);\n    }\n    return true;\n}\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text, replaceCh) {\n    var _scanner = createScanner(text), parts = [], kind, offset = 0, pos;\n    do {\n        pos = _scanner.getPosition();\n        kind = _scanner.scan();\n        switch (kind) {\n            case 12 /* LineCommentTrivia */:\n            case 13 /* BlockCommentTrivia */:\n            case 17 /* EOF */:\n                if (offset !== pos) {\n                    parts.push(text.substring(offset, pos));\n                }\n                if (replaceCh !== void 0) {\n                    parts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n                }\n                offset = _scanner.getPosition();\n                break;\n        }\n    } while (kind !== 17 /* EOF */);\n    return parts.join('');\n}\nfunction getLiteralNodeType(value) {\n    switch (typeof value) {\n        case 'boolean': return 'boolean';\n        case 'number': return 'number';\n        case 'string': return 'string';\n        default: return 'null';\n    }\n}\n//# sourceMappingURL=parser.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text, ignoreTrivia) {\n    if (ignoreTrivia === void 0) { ignoreTrivia = false; }\n    var pos = 0, len = text.length, value = '', tokenOffset = 0, token = 16 /* Unknown */, scanError = 0 /* None */;\n    function scanHexDigits(count, exact) {\n        var digits = 0;\n        var value = 0;\n        while (digits < count || !exact) {\n            var ch = text.charCodeAt(pos);\n            if (ch >= 48 /* _0 */ && ch <= 57 /* _9 */) {\n                value = value * 16 + ch - 48 /* _0 */;\n            }\n            else if (ch >= 65 /* A */ && ch <= 70 /* F */) {\n                value = value * 16 + ch - 65 /* A */ + 10;\n            }\n            else if (ch >= 97 /* a */ && ch <= 102 /* f */) {\n                value = value * 16 + ch - 97 /* a */ + 10;\n            }\n            else {\n                break;\n            }\n            pos++;\n            digits++;\n        }\n        if (digits < count) {\n            value = -1;\n        }\n        return value;\n    }\n    function setPosition(newPosition) {\n        pos = newPosition;\n        value = '';\n        tokenOffset = 0;\n        token = 16 /* Unknown */;\n        scanError = 0 /* None */;\n    }\n    function scanNumber() {\n        var start = pos;\n        if (text.charCodeAt(pos) === 48 /* _0 */) {\n            pos++;\n        }\n        else {\n            pos++;\n            while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n            }\n        }\n        if (pos < text.length && text.charCodeAt(pos) === 46 /* dot */) {\n            pos++;\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n                return text.substring(start, pos);\n            }\n        }\n        var end = pos;\n        if (pos < text.length && (text.charCodeAt(pos) === 69 /* E */ || text.charCodeAt(pos) === 101 /* e */)) {\n            pos++;\n            if (pos < text.length && text.charCodeAt(pos) === 43 /* plus */ || text.charCodeAt(pos) === 45 /* minus */) {\n                pos++;\n            }\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n                end = pos;\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n            }\n        }\n        return text.substring(start, end);\n    }\n    function scanString() {\n        var result = '', start = pos;\n        while (true) {\n            if (pos >= len) {\n                result += text.substring(start, pos);\n                scanError = 2 /* UnexpectedEndOfString */;\n                break;\n            }\n            var ch = text.charCodeAt(pos);\n            if (ch === 34 /* doubleQuote */) {\n                result += text.substring(start, pos);\n                pos++;\n                break;\n            }\n            if (ch === 92 /* backslash */) {\n                result += text.substring(start, pos);\n                pos++;\n                if (pos >= len) {\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                ch = text.charCodeAt(pos++);\n                switch (ch) {\n                    case 34 /* doubleQuote */:\n                        result += '\\\"';\n                        break;\n                    case 92 /* backslash */:\n                        result += '\\\\';\n                        break;\n                    case 47 /* slash */:\n                        result += '/';\n                        break;\n                    case 98 /* b */:\n                        result += '\\b';\n                        break;\n                    case 102 /* f */:\n                        result += '\\f';\n                        break;\n                    case 110 /* n */:\n                        result += '\\n';\n                        break;\n                    case 114 /* r */:\n                        result += '\\r';\n                        break;\n                    case 116 /* t */:\n                        result += '\\t';\n                        break;\n                    case 117 /* u */:\n                        var ch_1 = scanHexDigits(4, true);\n                        if (ch_1 >= 0) {\n                            result += String.fromCharCode(ch_1);\n                        }\n                        else {\n                            scanError = 4 /* InvalidUnicode */;\n                        }\n                        break;\n                    default:\n                        scanError = 5 /* InvalidEscapeCharacter */;\n                }\n                start = pos;\n                continue;\n            }\n            if (ch >= 0 && ch <= 0x1f) {\n                if (isLineBreak(ch)) {\n                    result += text.substring(start, pos);\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                else {\n                    scanError = 6 /* InvalidCharacter */;\n                    // mark as error but continue with string\n                }\n            }\n            pos++;\n        }\n        return result;\n    }\n    function scanNext() {\n        value = '';\n        scanError = 0 /* None */;\n        tokenOffset = pos;\n        if (pos >= len) {\n            // at the end\n            tokenOffset = len;\n            return token = 17 /* EOF */;\n        }\n        var code = text.charCodeAt(pos);\n        // trivia: whitespace\n        if (isWhiteSpace(code)) {\n            do {\n                pos++;\n                value += String.fromCharCode(code);\n                code = text.charCodeAt(pos);\n            } while (isWhiteSpace(code));\n            return token = 15 /* Trivia */;\n        }\n        // trivia: newlines\n        if (isLineBreak(code)) {\n            pos++;\n            value += String.fromCharCode(code);\n            if (code === 13 /* carriageReturn */ && text.charCodeAt(pos) === 10 /* lineFeed */) {\n                pos++;\n                value += '\\n';\n            }\n            return token = 14 /* LineBreakTrivia */;\n        }\n        switch (code) {\n            // tokens: []{}:,\n            case 123 /* openBrace */:\n                pos++;\n                return token = 1 /* OpenBraceToken */;\n            case 125 /* closeBrace */:\n                pos++;\n                return token = 2 /* CloseBraceToken */;\n            case 91 /* openBracket */:\n                pos++;\n                return token = 3 /* OpenBracketToken */;\n            case 93 /* closeBracket */:\n                pos++;\n                return token = 4 /* CloseBracketToken */;\n            case 58 /* colon */:\n                pos++;\n                return token = 6 /* ColonToken */;\n            case 44 /* comma */:\n                pos++;\n                return token = 5 /* CommaToken */;\n            // strings\n            case 34 /* doubleQuote */:\n                pos++;\n                value = scanString();\n                return token = 10 /* StringLiteral */;\n            // comments\n            case 47 /* slash */:\n                var start = pos - 1;\n                // Single-line comment\n                if (text.charCodeAt(pos + 1) === 47 /* slash */) {\n                    pos += 2;\n                    while (pos < len) {\n                        if (isLineBreak(text.charCodeAt(pos))) {\n                            break;\n                        }\n                        pos++;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 12 /* LineCommentTrivia */;\n                }\n                // Multi-line comment\n                if (text.charCodeAt(pos + 1) === 42 /* asterisk */) {\n                    pos += 2;\n                    var safeLength = len - 1; // For lookahead.\n                    var commentClosed = false;\n                    while (pos < safeLength) {\n                        var ch = text.charCodeAt(pos);\n                        if (ch === 42 /* asterisk */ && text.charCodeAt(pos + 1) === 47 /* slash */) {\n                            pos += 2;\n                            commentClosed = true;\n                            break;\n                        }\n                        pos++;\n                    }\n                    if (!commentClosed) {\n                        pos++;\n                        scanError = 1 /* UnexpectedEndOfComment */;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 13 /* BlockCommentTrivia */;\n                }\n                // just a single slash\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n            // numbers\n            case 45 /* minus */:\n                value += String.fromCharCode(code);\n                pos++;\n                if (pos === len || !isDigit(text.charCodeAt(pos))) {\n                    return token = 16 /* Unknown */;\n                }\n            // found a minus, followed by a number so\n            // we fall through to proceed with scanning\n            // numbers\n            case 48 /* _0 */:\n            case 49 /* _1 */:\n            case 50 /* _2 */:\n            case 51 /* _3 */:\n            case 52 /* _4 */:\n            case 53 /* _5 */:\n            case 54 /* _6 */:\n            case 55 /* _7 */:\n            case 56 /* _8 */:\n            case 57 /* _9 */:\n                value += scanNumber();\n                return token = 11 /* NumericLiteral */;\n            // literals and unknown symbols\n            default:\n                // is a literal? Read the full word.\n                while (pos < len && isUnknownContentCharacter(code)) {\n                    pos++;\n                    code = text.charCodeAt(pos);\n                }\n                if (tokenOffset !== pos) {\n                    value = text.substring(tokenOffset, pos);\n                    // keywords: true, false, null\n                    switch (value) {\n                        case 'true': return token = 8 /* TrueKeyword */;\n                        case 'false': return token = 9 /* FalseKeyword */;\n                        case 'null': return token = 7 /* NullKeyword */;\n                    }\n                    return token = 16 /* Unknown */;\n                }\n                // some\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n        }\n    }\n    function isUnknownContentCharacter(code) {\n        if (isWhiteSpace(code) || isLineBreak(code)) {\n            return false;\n        }\n        switch (code) {\n            case 125 /* closeBrace */:\n            case 93 /* closeBracket */:\n            case 123 /* openBrace */:\n            case 91 /* openBracket */:\n            case 34 /* doubleQuote */:\n            case 58 /* colon */:\n            case 44 /* comma */:\n            case 47 /* slash */:\n                return false;\n        }\n        return true;\n    }\n    function scanNextNonTrivia() {\n        var result;\n        do {\n            result = scanNext();\n        } while (result >= 12 /* LineCommentTrivia */ && result <= 15 /* Trivia */);\n        return result;\n    }\n    return {\n        setPosition: setPosition,\n        getPosition: function () { return pos; },\n        scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n        getToken: function () { return token; },\n        getTokenValue: function () { return value; },\n        getTokenOffset: function () { return tokenOffset; },\n        getTokenLength: function () { return pos - tokenOffset; },\n        getTokenError: function () { return scanError; }\n    };\n}\nfunction isWhiteSpace(ch) {\n    return ch === 32 /* space */ || ch === 9 /* tab */ || ch === 11 /* verticalTab */ || ch === 12 /* formFeed */ ||\n        ch === 160 /* nonBreakingSpace */ || ch === 5760 /* ogham */ || ch >= 8192 /* enQuad */ && ch <= 8203 /* zeroWidthSpace */ ||\n        ch === 8239 /* narrowNoBreakSpace */ || ch === 8287 /* mathematicalSpace */ || ch === 12288 /* ideographicSpace */ || ch === 65279 /* byteOrderMark */;\n}\nfunction isLineBreak(ch) {\n    return ch === 10 /* lineFeed */ || ch === 13 /* carriageReturn */ || ch === 8232 /* lineSeparator */ || ch === 8233 /* paragraphSeparator */;\n}\nfunction isDigit(ch) {\n    return ch >= 48 /* _0 */ && ch <= 57 /* _9 */;\n}\n//# sourceMappingURL=scanner.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as formatter from './impl/format.js';\nimport * as edit from './impl/edit.js';\nimport * as scanner from './impl/scanner.js';\nimport * as parser from './impl/parser.js';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport var createScanner = scanner.createScanner;\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport var getLocation = parser.getLocation;\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport var parse = parser.parse;\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport var parseTree = parser.parseTree;\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport var findNodeAtLocation = parser.findNodeAtLocation;\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport var findNodeAtOffset = parser.findNodeAtOffset;\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport var getNodePath = parser.getNodePath;\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport var getNodeValue = parser.getNodeValue;\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport var visit = parser.visit;\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport var stripComments = parser.stripComments;\nexport function printParseErrorCode(code) {\n    switch (code) {\n        case 1 /* InvalidSymbol */: return 'InvalidSymbol';\n        case 2 /* InvalidNumberFormat */: return 'InvalidNumberFormat';\n        case 3 /* PropertyNameExpected */: return 'PropertyNameExpected';\n        case 4 /* ValueExpected */: return 'ValueExpected';\n        case 5 /* ColonExpected */: return 'ColonExpected';\n        case 6 /* CommaExpected */: return 'CommaExpected';\n        case 7 /* CloseBraceExpected */: return 'CloseBraceExpected';\n        case 8 /* CloseBracketExpected */: return 'CloseBracketExpected';\n        case 9 /* EndOfFileExpected */: return 'EndOfFileExpected';\n        case 10 /* InvalidCommentToken */: return 'InvalidCommentToken';\n        case 11 /* UnexpectedEndOfComment */: return 'UnexpectedEndOfComment';\n        case 12 /* UnexpectedEndOfString */: return 'UnexpectedEndOfString';\n        case 13 /* UnexpectedEndOfNumber */: return 'UnexpectedEndOfNumber';\n        case 14 /* InvalidUnicode */: return 'InvalidUnicode';\n        case 15 /* InvalidEscapeCharacter */: return 'InvalidEscapeCharacter';\n        case 16 /* InvalidCharacter */: return 'InvalidCharacter';\n    }\n    return '<unknown ParseErrorCode>';\n}\n/**\n * Computes the edits needed to format a JSON document.\n *\n * @param documentText The input text\n * @param range The range to format or `undefined` to format the full content\n * @param options The formatting options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\nexport function format(documentText, range, options) {\n    return formatter.format(documentText, range, options);\n}\n/**\n * Computes the edits needed to modify a value in the JSON document.\n *\n * @param documentText The input text\n * @param path The path of the value to change. The path represents either to the document root, a property or an array item.\n * If the path points to an non-existing property or item, it will be created.\n * @param value The new value for the specified property or item. If the value is undefined,\n * the property or item will be removed.\n * @param options Options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\nexport function modify(text, path, value, options) {\n    return edit.setProperty(text, path, value, options.formattingOptions, options.getInsertionIndex);\n}\n/**\n * Applies edits to a input string.\n */\nexport function applyEdits(text, edits) {\n    for (var i = edits.length - 1; i >= 0; i--) {\n        text = edit.applyEdit(text, edits[i]);\n    }\n    return text;\n}\n//# sourceMappingURL=main.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as json from './_deps/jsonc-parser/main.js';\nexport function createTokenizationSupport(supportComments) {\n    return {\n        getInitialState: function () { return new JSONState(null, null, false); },\n        tokenize: function (line, state, offsetDelta, stopAtOffset) { return tokenize(supportComments, line, state, offsetDelta, stopAtOffset); }\n    };\n}\nexport var TOKEN_DELIM_OBJECT = 'delimiter.bracket.json';\nexport var TOKEN_DELIM_ARRAY = 'delimiter.array.json';\nexport var TOKEN_DELIM_COLON = 'delimiter.colon.json';\nexport var TOKEN_DELIM_COMMA = 'delimiter.comma.json';\nexport var TOKEN_VALUE_BOOLEAN = 'keyword.json';\nexport var TOKEN_VALUE_NULL = 'keyword.json';\nexport var TOKEN_VALUE_STRING = 'string.value.json';\nexport var TOKEN_VALUE_NUMBER = 'number.json';\nexport var TOKEN_PROPERTY_NAME = 'string.key.json';\nexport var TOKEN_COMMENT_BLOCK = 'comment.block.json';\nexport var TOKEN_COMMENT_LINE = 'comment.line.json';\nvar JSONState = /** @class */ (function () {\n    function JSONState(state, scanError, lastWasColon) {\n        this._state = state;\n        this.scanError = scanError;\n        this.lastWasColon = lastWasColon;\n    }\n    JSONState.prototype.clone = function () {\n        return new JSONState(this._state, this.scanError, this.lastWasColon);\n    };\n    JSONState.prototype.equals = function (other) {\n        if (other === this) {\n            return true;\n        }\n        if (!other || !(other instanceof JSONState)) {\n            return false;\n        }\n        return this.scanError === other.scanError &&\n            this.lastWasColon === other.lastWasColon;\n    };\n    JSONState.prototype.getStateData = function () {\n        return this._state;\n    };\n    JSONState.prototype.setStateData = function (state) {\n        this._state = state;\n    };\n    return JSONState;\n}());\nfunction tokenize(comments, line, state, offsetDelta, stopAtOffset) {\n    if (offsetDelta === void 0) { offsetDelta = 0; }\n    // handle multiline strings and block comments\n    var numberOfInsertedCharacters = 0, adjustOffset = false;\n    switch (state.scanError) {\n        case 2 /* UnexpectedEndOfString */:\n            line = '\"' + line;\n            numberOfInsertedCharacters = 1;\n            break;\n        case 1 /* UnexpectedEndOfComment */:\n            line = '/*' + line;\n            numberOfInsertedCharacters = 2;\n            break;\n    }\n    var scanner = json.createScanner(line), kind, ret, lastWasColon = state.lastWasColon;\n    ret = {\n        tokens: [],\n        endState: state.clone()\n    };\n    while (true) {\n        var offset = offsetDelta + scanner.getPosition(), type = '';\n        kind = scanner.scan();\n        if (kind === 17 /* EOF */) {\n            break;\n        }\n        // Check that the scanner has advanced\n        if (offset === offsetDelta + scanner.getPosition()) {\n            throw new Error('Scanner did not advance, next 3 characters are: ' + line.substr(scanner.getPosition(), 3));\n        }\n        // In case we inserted /* or \" character, we need to\n        // adjust the offset of all tokens (except the first)\n        if (adjustOffset) {\n            offset -= numberOfInsertedCharacters;\n        }\n        adjustOffset = numberOfInsertedCharacters > 0;\n        // brackets and type\n        switch (kind) {\n            case 1 /* OpenBraceToken */:\n                type = TOKEN_DELIM_OBJECT;\n                lastWasColon = false;\n                break;\n            case 2 /* CloseBraceToken */:\n                type = TOKEN_DELIM_OBJECT;\n                lastWasColon = false;\n                break;\n            case 3 /* OpenBracketToken */:\n                type = TOKEN_DELIM_ARRAY;\n                lastWasColon = false;\n                break;\n            case 4 /* CloseBracketToken */:\n                type = TOKEN_DELIM_ARRAY;\n                lastWasColon = false;\n                break;\n            case 6 /* ColonToken */:\n                type = TOKEN_DELIM_COLON;\n                lastWasColon = true;\n                break;\n            case 5 /* CommaToken */:\n                type = TOKEN_DELIM_COMMA;\n                lastWasColon = false;\n                break;\n            case 8 /* TrueKeyword */:\n            case 9 /* FalseKeyword */:\n                type = TOKEN_VALUE_BOOLEAN;\n                lastWasColon = false;\n                break;\n            case 7 /* NullKeyword */:\n                type = TOKEN_VALUE_NULL;\n                lastWasColon = false;\n                break;\n            case 10 /* StringLiteral */:\n                type = lastWasColon ? TOKEN_VALUE_STRING : TOKEN_PROPERTY_NAME;\n                lastWasColon = false;\n                break;\n            case 11 /* NumericLiteral */:\n                type = TOKEN_VALUE_NUMBER;\n                lastWasColon = false;\n                break;\n        }\n        // comments, iff enabled\n        if (comments) {\n            switch (kind) {\n                case 12 /* LineCommentTrivia */:\n                    type = TOKEN_COMMENT_LINE;\n                    break;\n                case 13 /* BlockCommentTrivia */:\n                    type = TOKEN_COMMENT_BLOCK;\n                    break;\n            }\n        }\n        ret.endState = new JSONState(state.getStateData(), scanner.getTokenError(), lastWasColon);\n        ret.tokens.push({\n            startIndex: offset,\n            scopes: type\n        });\n    }\n    return ret;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nimport { createTokenizationSupport } from './tokenization.js';\nexport function setupMode(defaults) {\n    var disposables = [];\n    var client = new WorkerManager(defaults);\n    disposables.push(client);\n    var worker = function () {\n        var uris = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            uris[_i] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, uris);\n    };\n    var languageId = defaults.languageId;\n    disposables.push(monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker)));\n    disposables.push(monaco.languages.registerHoverProvider(languageId, new languageFeatures.HoverAdapter(worker)));\n    disposables.push(monaco.languages.registerDocumentSymbolProvider(languageId, new languageFeatures.DocumentSymbolAdapter(worker)));\n    disposables.push(monaco.languages.registerDocumentFormattingEditProvider(languageId, new languageFeatures.DocumentFormattingEditProvider(worker)));\n    disposables.push(monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new languageFeatures.DocumentRangeFormattingEditProvider(worker)));\n    disposables.push(new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults));\n    disposables.push(monaco.languages.setTokensProvider(languageId, createTokenizationSupport(true)));\n    disposables.push(monaco.languages.setLanguageConfiguration(languageId, richEditConfiguration));\n    disposables.push(monaco.languages.registerColorProvider(languageId, new languageFeatures.DocumentColorAdapter(worker)));\n    disposables.push(monaco.languages.registerFoldingRangeProvider(languageId, new languageFeatures.FoldingRangeAdapter(worker)));\n}\nvar richEditConfiguration = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\[\\{\\]\\}\\:\\\"\\,\\s]+)/g,\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}', notIn: ['string'] },\n        { open: '[', close: ']', notIn: ['string'] },\n        { open: '\"', close: '\"', notIn: ['string'] }\n    ]\n};\n"],"sourceRoot":""}