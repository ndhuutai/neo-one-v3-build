{"version":3,"sources":["webpack:///PostLink.tsx","webpack:///BlogAll.tsx","webpack:///blogAll.tsx","webpack:///Helmet.tsx","webpack:///BlogLoading.tsx"],"names":["StyledLink","StyledRouterLink","PostInfo","Wrapper","PostLink","title","path","date","author","props","to","linkColor","name","PostsGrid","Title","InnerWrapper","BlogAll","posts","map","post","key","slug","Suspense","fallback","BlogLoading","Helmet","MainLayout","description","children","meta","content","itemprop","property","concat","undefined"],"mappings":"kLAeA,MAAMA,EAAa,YAAOC,EAAA,EAAP,qBACf,eAAK,6BADO,KAIVC,EAAW,YAAO,MAAP,qBAAH,SACH,eAAK,eADF,IAEV,eAAK,+BAFK,KAKRC,EAAU,YAAO,OAAP,qBAAH,gEAGgB,eAAK,eAHrB,yBAOAC,EAAY,I,IAAA,MAAEC,EAAF,KAASC,EAAT,KAAeC,EAAf,OAAqBC,GAAM,EAAKC,EAAK,mBAArC,kCAAmD,OAC1E,gBAACN,EAAO,iBAAKM,GACX,gBAACT,EAAU,CAACU,GAAIJ,EAAMK,UAAU,QAC7BN,GAEH,gBAACH,EAAQ,KAAEK,GACX,gBAACL,EAAQ,KAAE,MAAMM,EAAOI,QCnB5B,MAAMC,EAAY,YAAO,MAAP,sBAAH,qCAEW,eAAK,eAFhB,mJAWQ,eAAK,wBAXb,oEAgBQ,eAAK,wBAhBb,kJA2BTC,EAAQ,YAAO,MAAP,sBACV,eAAK,6BADE,yCAIY,eAAK,wBAJjB,2CAQY,eAAK,wBARjB,KASL,eAAK,6BATA,yBAcL,EAAU,YAAO,MAAP,sBAAH,0GAOU,eAAK,wBAPf,uEAaU,eAAK,wBAbf,wBAkBPC,EAAe,YAAO,MAAP,sBAAH,8DAKLC,EAAW,I,IAAA,MAAEC,GAAK,EAAKR,EAAK,mBAAjB,WAAsC,OAC5D,gBAAC,EAAO,iBAAKA,GACX,gBAACM,EAAY,KACX,gBAAC,MAAG,KACF,gBAACD,EAAK,kBAEN,gBAACD,EAAS,KACPI,EAAMC,IAAKC,GACV,gBAACf,EAAQ,CAACgB,IAAKD,EAAKE,KAAMf,KAAMa,EAAKE,KAAMhB,MAAOc,EAAKd,MAAOG,OAAQW,EAAKX,OAAQD,KAAMY,EAAKZ,a,qBClF1G,MAAM,SAAEe,GAAa,IAGN,eACb,MAAMb,EAAQ,yBAEd,OACE,oCACE,kBAACa,EAAQ,CAACC,SAAU,kBAACC,EAAA,EAAW,OAC9B,kBAACC,EAAA,EAAM,CAACpB,MAAM,iBACd,kBAACqB,EAAA,EAAU,CAACpB,KAAK,QACf,kBAACU,EAAO,iBAAKP,S,sGCThB,MAAMgB,EAAU,I,IAAA,MAAEpB,EAAF,YAASsB,EAAT,SAAsBC,GAAQ,EAAKnB,EAAK,mBAAxC,oCAAsD,OAC3E,kBAAC,OAAI,eACHJ,MAAOA,GACHI,EAAK,CACToB,KAAM,CACJ,CAAEjB,KAAM,gBAAiBkB,QAASzB,GAElC,CAAE0B,SAAU,OAAQD,QAASzB,GAC7B,CAAE2B,SAAU,WAAYF,QAASzB,GAEjC,CAAE0B,SAAU,QAASD,QAAS,iCAC9B,CAAElB,KAAM,oBAAqBkB,QAAS,iCACtC,CAAEE,SAAU,WAAYF,QAAS,iCACjC,CAAElB,KAAM,eAAgBkB,QAAS,WACjC,CAAElB,KAAM,eAAgBkB,QAAS,kBACjC,CAAEE,SAAU,SAAUF,QAAS,sBAC/B,CAAEE,SAAU,eAAgBF,QAAS,WACrC,CAAEE,SAAU,UAAWF,QAAS,YAChCG,YACgBC,IAAhBP,EACI,GACA,CACE,CAAEf,KAAM,cAAekB,QAASH,GAEhC,CAAEI,SAAU,cAAeD,QAASH,GACpC,CAAEK,SAAU,iBAAkBF,QAASH,GACvC,CAAEf,KAAM,sBAAuBkB,QAASH,OAI/CC,K,iCCxCL,4DAIO,MAAMJ,EAAc,IACzB,gBAAC,IAAU,CAAClB,KAAK,QACf,gBAAC,UAAO","file":"templates/Users/tainguyen/neo-one/packages/neo-one-website/src/pages/blogAll.63e70394.js","sourcesContent":["import styled from '@emotion/styled';\nimport { Box, List } from '@neo-one/react-common';\nimport * as React from 'react';\nimport { prop } from 'styled-tools';\nimport { Author } from '../content';\nimport { StyledRouterLink } from '../StyledRouterLink';\n\ninterface Props {\n  readonly title: string;\n  readonly path: string;\n  readonly date: string;\n  readonly author: Author;\n}\n\n// tslint:disable-next-line: no-any\nconst StyledLink = styled(StyledRouterLink)<any>`\n  ${prop('theme.fontStyles.headline')};\n`;\n\nconst PostInfo = styled(Box)<{}, {}>`\n  color: ${prop('theme.gray5')};\n  ${prop('theme.fontStyles.subheading')};\n`;\n\nconst Wrapper = styled(List)<{}, {}>`\n  list-style-type: none;\n  max-width: 320px;\n  border-bottom: 1px solid ${prop('theme.gray3')};\n  padding-bottom: 16px;\n`;\n\nexport const PostLink = ({ title, path, date, author, ...props }: Props) => (\n  <Wrapper {...props}>\n    <StyledLink to={path} linkColor=\"gray\">\n      {title}\n    </StyledLink>\n    <PostInfo>{date}</PostInfo>\n    <PostInfo>{`by ${author.name}`}</PostInfo>\n  </Wrapper>\n);\n","import styled from '@emotion/styled';\nimport { Box } from '@neo-one/react-common';\nimport * as React from 'react';\nimport { prop } from 'styled-tools';\nimport { Author } from '../content';\nimport { PostLink } from './PostLink';\n\ninterface BlogPost {\n  readonly slug: string;\n  readonly title: string;\n  readonly date: string;\n  readonly author: Author;\n}\n\nexport interface BlogAllProps {\n  readonly posts: readonly BlogPost[];\n}\n\nconst PostsGrid = styled(Box)<{}, {}>`\n  display: grid;\n  border-top: 1px solid ${prop('theme.gray3')};\n  grid-template-columns: 1fr;\n  margin-left: -8px;\n  margin-right: -8px;\n  padding-left: 8px;\n  padding-right: 8px;\n  padding-top: 8px;\n  grid-gap: 8px;\n\n  @media (min-width: ${prop('theme.breakpoints.sm')}) {\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 16px;\n  }\n\n  @media (min-width: ${prop('theme.breakpoints.md')}) {\n    grid-template-columns: 1fr 1fr 1fr;\n    margin-left: -16px;\n    margin-right: -16px;\n    padding-left: 16px;\n    padding-right: 16px;\n    padding-top: 24px;\n    grid-gap: 24px;\n  }\n`;\n\nconst Title = styled(Box)<{}, {}>`\n  ${prop('theme.fontStyles.display2')};\n  margin-bottom: 16px;\n\n  @media (min-width: ${prop('theme.breakpoints.sm')}) {\n    margin-bottom: 24px;\n  }\n\n  @media (min-width: ${prop('theme.breakpoints.md')}) {\n    ${prop('theme.fontStyles.display3')};\n    margin-bottom: 32px;\n  }\n`;\n\nconst Wrapper = styled(Box)<{}, {}>`\n  padding-left: 16px;\n  padding-right: 16px;\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n\n  @media (min-width: ${prop('theme.breakpoints.md')}) {\n    width: 90%;\n    padding-top: 64px;\n    padding-bottom: 64px;\n  }\n\n  @media (min-width: ${prop('theme.breakpoints.lg')}) {\n    max-width: 1280px;\n  }\n`;\n\nconst InnerWrapper = styled(Box)`\n  display: grid;\n  justify-items: center;\n`;\n\nexport const BlogAll = ({ posts, ...props }: BlogAllProps) => (\n  <Wrapper {...props}>\n    <InnerWrapper>\n      <Box>\n        <Title>All Posts</Title>\n\n        <PostsGrid>\n          {posts.map((post) => (\n            <PostLink key={post.slug} path={post.slug} title={post.title} author={post.author} date={post.date} />\n          ))}\n        </PostsGrid>\n      </Box>\n    </InnerWrapper>\n  </Wrapper>\n);\n","// tslint:disable-next-line no-import-side-effect\nimport '../polyfill';\n\nimport React from 'react';\nimport { useRouteData } from 'react-static';\nimport { BlogAll, BlogAllProps, Helmet } from '../components';\nimport { BlogLoading, MainLayout } from '../layout';\n\nconst { Suspense } = React;\n\n// tslint:disable-next-line:no-default-export export-name\nexport default () => {\n  const props = useRouteData<BlogAllProps>();\n\n  return (\n    <>\n      <Suspense fallback={<BlogLoading />}>\n        <Helmet title=\"NEO•ONE Blog\" />\n        <MainLayout path=\"blog\">\n          <BlogAll {...props} />\n        </MainLayout>\n      </Suspense>\n    </>\n  );\n};\n","// tslint:disable no-null-keyword\nimport React from 'react';\nimport { Head } from 'react-static';\n\ninterface Props {\n  readonly title: string;\n  readonly description?: string;\n  readonly children?: React.ReactNode;\n}\n\nexport const Helmet = ({ title, description, children, ...props }: Props) => (\n  <Head\n    title={title}\n    {...props}\n    meta={[\n      { name: 'twitter:title', content: title },\n      // @ts-ignore\n      { itemprop: 'name', content: title },\n      { property: 'og:title', content: title },\n      // @ts-ignore\n      { itemprop: 'image', content: 'https://neo-one.io/social.png' },\n      { name: 'twitter:image:src', content: 'https://neo-one.io/social.png' },\n      { property: 'og:image', content: 'https://neo-one.io/social.png' },\n      { name: 'twitter:card', content: 'summary' },\n      { name: 'twitter:site', content: '@neo_one_suite' },\n      { property: 'og:url', content: 'https://neo-one.io' },\n      { property: 'og:site_name', content: 'NEO•ONE' },\n      { property: 'og:type', content: 'website' },\n    ].concat(\n      description === undefined\n        ? []\n        : [\n            { name: 'description', content: description },\n            // @ts-ignore\n            { itemprop: 'description', content: description },\n            { property: 'og:description', content: description },\n            { name: 'twitter:description', content: description },\n          ],\n    )}\n  >\n    {children}\n  </Head>\n);\n","import { Loading } from '@neo-one/react-common';\nimport * as React from 'react';\nimport { MainLayout } from './MainLayout';\n\nexport const BlogLoading = () => (\n  <MainLayout path=\"blog\">\n    <Loading />\n  </MainLayout>\n);\n"],"sourceRoot":""}