{"version":3,"sources":["webpack:///AssetImage.tsx","webpack:///ContentWrapperBase.tsx","webpack:///AssetSectionGrid.tsx","webpack:///Authoring.tsx","webpack:///Proof.tsx","webpack:///Testing.tsx","webpack:///Home.tsx","webpack:///index.tsx","webpack:////Users/tainguyen/neo-one/packages/neo-one-website/static/img/authoring.png"],"names":["AssetImage","ContentWrapperBase","StyledHeading","Content","AssetItem","ContentItem","Wrapper","AssetSectionGrid","title","children","asset","props","Authoring","src","a","Title","Line","Proof","lines","map","line","key","StyledMarkdown","Markdown","Testing","source","StyledBackground","StyledLineLogoPrimary","Headline","ButtonWrapper","LinkButton","withComponent","StyledRouterLink","StyledLinkButton","CenterContentWrapper","ProofsWrapper","ProofsInnerWrapper","FeaturesWrapper","Home","linkColor","to","MainLayout","path","Helmet","description","module","exports"],"mappings":"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","file":"templates/Users/tainguyen/neo-one/packages/neo-one-website/src/pages/index.232df286.js","sourcesContent":["import styled from '@emotion/styled';\nimport { Image } from '@neo-one/react-common';\n\nexport const AssetImage = styled(Image)`\n  min-width: 0;\n  min-height: 0;\n  object-fit: scale-down;\n  max-width: 100%;\n`;\n","import styled from '@emotion/styled';\nimport { Box } from '@neo-one/react-common';\nimport { prop } from 'styled-tools';\n\nexport const ContentWrapperBase = styled(Box)<{}, {}>`\n  display: grid;\n  max-width: 1260px;\n  padding-left: 24px;\n  padding-right: 24px;\n\n  @media (max-width: ${prop('theme.breakpoints.md')}) {\n    padding-left: 16px;\n    padding-right: 16px;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { Box } from '@neo-one/react-common';\nimport * as React from 'react';\nimport { prop } from 'styled-tools';\nimport { ContentWrapperBase } from './ContentWrapperBase';\n\ninterface Props {\n  readonly title: string;\n  readonly asset: React.ReactNode;\n  readonly children: React.ReactNode;\n}\n\nconst StyledHeading = styled.h2<{}, {}>`\n  ${prop('theme.fonts.axiformaMedium')};\n  ${prop('theme.fontStyles.headline')};\n  /* stylelint-disable-next-line */\n  color: ${prop('theme.black')};\n  margin: 0;\n`;\n\nconst Content = styled(Box)<{}, {}>`\n  display: grid;\n  ${prop('theme.fonts.axiformaRegular')};\n  ${prop('theme.fontStyles.subheading')};\n  color: ${prop('theme.black')};\n  margin: 0;\n  gap: 16;\n`;\n\nconst AssetItem = styled(Box)`\n  grid-area: asset;\n  display: grid;\n  min-width: 0;\n  min-height: 0;\n`;\n\nconst ContentItem = styled(Box)`\n  grid-area: content;\n  display: grid;\n  gap: 16;\n`;\n\nconst Wrapper = styled(Box)<{}, {}>`\n  display: grid;\n  grid-template:\n    'content asset' auto\n    / 4fr 3fr;\n  grid-gap: 16px;\n  justify-items: center;\n  align-items: center;\n\n  @media (max-width: ${prop('theme.breakpoints.md')}) {\n    grid-template:\n      'content' auto\n      'asset' auto\n      / 1fr;\n  }\n`;\n\nexport const AssetSectionGrid = ({ title, children, asset, ...props }: Props) => (\n  <ContentWrapperBase {...props}>\n    <Wrapper>\n      <AssetItem>{asset}</AssetItem>\n      <ContentItem>\n        <StyledHeading>{title}</StyledHeading>\n        <Content>{children}</Content>\n      </ContentItem>\n    </Wrapper>\n  </ContentWrapperBase>\n);\n","import * as React from 'react';\nimport authoring from '../../../static/img/authoring.png';\nimport { AssetImage } from './AssetImage';\nimport { AssetSectionGrid } from './AssetSectionGrid';\n\nexport function Authoring() {\n  return (\n    <AssetSectionGrid title=\"Authoring\" asset={<AssetImage src={authoring} />}>\n      <div>\n        Authoring smart contracts has never been easier. First class TypeScript integration means that smart contracts\n        are strongly typed and will never leave you guessing at what's supported. Write idiomatic TypeScript with inline\n        compiler diagnostics using the NEO•ONE TypeScript plugin.\n      </div>\n    </AssetSectionGrid>\n  );\n}\n","import styled from '@emotion/styled';\nimport { Box } from '@neo-one/react-common';\nimport * as React from 'react';\nimport { prop } from 'styled-tools';\n\nconst Wrapper = styled(Box)<{}, {}>`\n  display: grid;\n  margin-left: 8px;\n  margin-right: 24px;\n  grid-gap: 16px;\n  align-items: start;\n  align-content: start;\n  min-width: 240px;\n\n  @media (max-width: ${prop('theme.breakpoints.md')}) {\n    min-width: 336px;\n  }\n`;\n\nconst Title = styled.h2<{}, {}>`\n  ${prop('theme.fonts.axiformaThin')};\n  ${prop('theme.fontStyles.headline')};\n  color: ${prop('theme.gray5')};\n  margin: 0;\n`;\n\nconst Line = styled.p<{}, {}>`\n  ${prop('theme.fonts.axiformaRegular')};\n  ${prop('theme.fontStyles.subheading')};\n  color: ${prop('theme.black')};\n  margin: 0;\n`;\n\ninterface Props {\n  readonly title: string;\n  readonly lines: readonly string[];\n}\n\nexport const Proof = ({ title, lines, ...props }: Props) => (\n  <Wrapper {...props}>\n    <Title>{title}</Title>\n    {lines.map((line) => (\n      <Line key={line}>{line}</Line>\n    ))}\n  </Wrapper>\n);\n","import styled from '@emotion/styled';\nimport * as React from 'react';\nimport { Markdown } from '../../elements';\nimport { AssetSectionGrid } from './AssetSectionGrid';\n\nconst example = `\\`\\`\\`typescript\nimport { withContracts } from '../generated/test';\n\ndescribe('Token', () => {\n  test('has name, symbol and decimals properties', async () => {\n    await withContracts(async ({ token }) => {\n      const [name, symbol, decimals] = await Promise.all([token.name(), token.symbol(), token.decimals()]);\n      expect(name).toEqual('Eon');\n      expect(symbol).toEqual('EON');\n      expect(decimals.toNumber()).toEqual(8);\n    });\n  });\n});\n\\`\\`\\``;\n\nconst StyledMarkdown = styled(Markdown)`\n  min-width: 0;\n  min-height: 0;\n  max-width: 100%;\n\n  &&&& pre[class*='language-'] {\n    margin-left: 0;\n    margin-right: 0;\n  }\n`;\n\nexport function Testing() {\n  return (\n    <AssetSectionGrid title=\"Testing\" asset={<StyledMarkdown source={example} />}>\n      <div>\n        Test smart contracts with human-friendly NEO•ONE client APIs. Each test runs a fresh full node and comes with\n        handy utilities to enable scenarios like fast forwarding the node's block time to a point in the future.\n      </div>\n    </AssetSectionGrid>\n  );\n}\n","import styled from '@emotion/styled';\nimport { Background, Box, Button, LineLogoPrimary } from '@neo-one/react-common';\nimport * as React from 'react';\nimport { prop } from 'styled-tools';\nimport { StyledRouterLinkBase } from '../StyledRouterLink';\nimport { Authoring } from './Authoring';\nimport { ContentWrapperBase } from './ContentWrapperBase';\nimport { DeveloperTools } from './DeveloperTools';\nimport { EditorContent } from './EditorContent';\nimport { Proof } from './Proof';\nimport { Testing } from './Testing';\n\n// tslint:disable-next-line: no-any\nconst StyledBackground = styled<any>(Background)<any>`\n  display: grid;\n  place-content: center;\n  place-items: center;\n  gap: 32px;\n  color: ${prop('theme.gray0')};\n  justify-content: center;\n  padding: 40px;\n  width: 100%;\n  box-sizing: border-box;\n`;\n\nconst StyledLineLogoPrimary = styled(LineLogoPrimary)`\n  &&& {\n    height: 40px;\n  }\n`;\n\nconst Headline = styled(Box)<{}, {}>`\n  ${prop('theme.fonts.axiformaRegular')};\n  ${prop('theme.fontStyles.display1')};\n  text-align: center;\n`;\n\nconst ButtonWrapper = styled(Box)`\n  display: grid;\n  align-items: center;\n  grid-auto-flow: column;\n  grid-gap: 24px;\n`;\n\n// tslint:disable-next-line: no-any\nconst LinkButton = Button.withComponent<any>(StyledRouterLinkBase);\nconst StyledLinkButton = styled(LinkButton)<{}, {}>`\n  ${prop('theme.fontStyles.subheading')};\n`;\n\n// tslint:disable-next-line: no-any\nconst StyledLink = styled(StyledRouterLinkBase)<any>`\n  ${prop('theme.fontStyles.subheading')};\n  color: ${prop('theme.accent')};\n\n  &:hover {\n    color: ${prop('theme.primary')};\n  }\n`;\n\nconst CenterContentWrapper = styled(ContentWrapperBase)`\n  flex: 1 1 auto;\n  justify-content: center;\n`;\n\nconst ProofsWrapper = styled(Box)<{}, {}>`\n  display: grid;\n  grid-auto-flow: column;\n  padding-top: 64px;\n  padding-bottom: 64px;\n\n  @media (max-width: ${prop('theme.breakpoints.md')}) {\n    padding-top: 32px;\n    padding-bottom: 32px;\n    border-bottom: 1px solid ${prop('theme.gray3')};\n  }\n`;\n\nconst ProofsInnerWrapper = styled(Box)<{}, {}>`\n  display: grid;\n  grid-auto-flow: column;\n\n  @media (max-width: ${prop('theme.breakpoints.md')}) {\n    mask-image: linear-gradient(to right, transparent, white 10px, white 90%, transparent);\n    overflow-x: auto;\n  }\n`;\n\nconst FeaturesWrapper = styled(Box)<{}, {}>`\n  display: grid;\n  padding-top: 64px;\n  padding-bottom: 64px;\n  grid-gap: 64px;\n\n  @media (max-width: ${prop('theme.breakpoints.md')}) {\n    padding-top: 32px;\n    padding-bottom: 32px;\n    grid-gap: 32px;\n  }\n`;\n\nconst Wrapper = styled(Box)`\n  display: grid;\n  justify-items: center;\n`;\n\nexport const Home = (props: {}) => (\n  <Wrapper {...props}>\n    <StyledBackground>\n      <StyledLineLogoPrimary />\n      <Headline>The One for easy, fast, & fun NEO blockchain development</Headline>\n      <ButtonWrapper>\n        <StyledLinkButton linkColor=\"gray\" to=\"docs/getting-started\">\n          Get Started\n        </StyledLinkButton>\n        {/* <StyledLink to=\"course\" linkColor=\"primary\">\n          Take Course {'>'}\n        </StyledLink> */}\n      </ButtonWrapper>\n    </StyledBackground>\n    <CenterContentWrapper>\n      <ProofsWrapper>\n        <ProofsInnerWrapper>\n          <Proof\n            title=\"Powerful\"\n            lines={[\n              'NEO•ONE makes coding, testing and deploying NEO dapps easy, fast, efficient and enjoyable.',\n              'The complete end-to-end framework offers effortless startup and empowers you with tooling every step of the way.',\n            ]}\n          />\n          <Proof\n            title=\"Intuitive\"\n            lines={[\n              'Write idiomatic TypeScript smart contracts that look, feel and work just like a normal TypeScript program.',\n              'Test smart contracts with familiar frameworks like Jest using the intuitive client APIs.',\n            ]}\n          />\n          <Proof\n            title=\"Approachable\"\n            lines={[\n              // 'NEO•ONE courses distill the essentials of dapp development into bite-sized interactive learning chapters. Build, test and write the UI for smart contracts with the NEO•ONE editor.',\n              \"With the most comprehensive documentation available for NEO, you'll always have a resource to reference.\",\n            ]}\n          />\n        </ProofsInnerWrapper>\n      </ProofsWrapper>\n    </CenterContentWrapper>\n    {/* <EditorContent /> */}\n    <FeaturesWrapper>\n      <Authoring />\n      <Testing />\n      {/* <DeveloperTools /> */}\n    </FeaturesWrapper>\n  </Wrapper>\n);\n","// tslint:disable-next-line no-import-side-effect\nimport '../polyfill';\n\nimport * as React from 'react';\nimport { Helmet, Home } from '../components';\nimport { MainLayout } from '../layout';\n\n// tslint:disable-next-line export-name no-default-export\nexport default () => (\n  <MainLayout path=\"/\">\n    <Helmet\n      title=\"NEO•ONE - The One for easy, fast, & fun NEO blockchain development\"\n      description=\"NEO•ONE makes coding, testing and deploying NEO dapps easier, faster, more efficient and much more enjoyable.\"\n    />\n    <Home />\n  </MainLayout>\n);\n","module.exports = __webpack_public_path__ + \"static/authoring.1c3fb369.png\";"],"sourceRoot":""}