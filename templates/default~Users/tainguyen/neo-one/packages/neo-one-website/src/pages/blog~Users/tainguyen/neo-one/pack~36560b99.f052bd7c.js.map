{"version":3,"sources":["webpack:///ContentLayout.tsx","webpack:///AdjacentLink.tsx","webpack:///DocFooter.tsx","webpack:///Title.tsx","webpack:///utils.tsx","webpack:///Example.tsx","webpack:///Text.tsx","webpack:///Extra.tsx","webpack:///TextSection.tsx","webpack:///ParameterPropertyItem.tsx","webpack:///ParameterPropertyList.tsx","webpack:///ParameterReturns.tsx","webpack:///MethodItem.tsx","webpack:///MethodList.tsx","webpack:///InterfaceClassItems.tsx","webpack:///TypeIcon.tsx","webpack:///ReferenceHeader.tsx","webpack:///ReferencePage.tsx","webpack:///ReferenceLink.tsx","webpack:///TypeFilterOption.tsx","webpack:///types.ts","webpack:///TypeFilter.tsx","webpack:///ReferenceGrid.tsx","webpack:///ReferenceContent.tsx","webpack:///DateAndAuthor.tsx","webpack:///EditPageLink.tsx","webpack:///MainContent.tsx","webpack:///SectionHeader.tsx","webpack:///SubsectionLink.tsx","webpack:///SectionList.tsx","webpack:///Section.tsx","webpack:///SidebarList.tsx","webpack:///Sidebar.tsx","webpack:///Content.tsx","webpack:///Helmet.tsx","webpack:////Users/tainguyen/neo-one/common/temp/node_modules/lodash/isEmpty.js","webpack:////Users/tainguyen/neo-one/common/temp/node_modules/lodash/_baseKeys.js","webpack:////Users/tainguyen/neo-one/common/temp/node_modules/lodash/isArrayLike.js","webpack:////Users/tainguyen/neo-one/common/temp/node_modules/lodash/isFunction.js","webpack:////Users/tainguyen/neo-one/common/temp/node_modules/lodash/_baseGetTag.js","webpack:////Users/tainguyen/neo-one/common/temp/node_modules/lodash/isLength.js","webpack:////Users/tainguyen/neo-one/common/temp/node_modules/lodash/_isPrototype.js"],"names":["ContentLayout","props","content","ArticleText","StyledLink","StyledRouterLink","AdjacentLink","adjacent","next","linkColor","to","slug","title","Wrapper","LinkWrapper","DocFooter","previous","undefined","LayoutWrapper","Title","PUNCTUATION","checkPunctuation","idx","example","value","includes","length","StyledReferenceLink","ReferenceLink","code","key","getHighlightedHtml","token","__html","highlight","languages","typescript","PreWrapper","withComponent","CodeWrapper","Example","className","map","dangerouslySetInnerHTML","buildExample","StyledText","Text","text","buildText","Extra","data","TextSection","subheading","ParameterLayout","Name","ParameterPropertyItem","name","type","description","ParameterPropertyList","values","ParameterReturns","functionData","parameters","returns","Layout","StyledTitle","MethodItem","method","definition","extra","MethodList","methods","staticMethods","InterfaceClassItems","constructorDefinition","properties","IconBox","All","Class","Const","Function","Interface","Enum","Decorator","TypeIcon","fullIcon","bg","charAt","letterIcon","ReferenceHeader","PageLayout","ReferencePage","classData","enumData","members","constData","interfaceData","path","StyledBox","TypeFilterOption","TYPE_FILTER_OPTIONS","StyledSelect","createFormatOptionLabel","option","TypeFilter","selected","onChange","formatOptionLabel","placeholder","options","useState","ReferenceLayout","StyledInput","FilterWrapper","ReferenceGrid","typeFilter","setTypeFilter","textFilter","setTextFilter","event","target","filter","reference","toLowerCase","ReferenceContent","DateAndAuthor","author","date","year","month","day","split","dateValue","Date","parseInt","toLocaleDateString","href","twitter","Div","cleanLink","input","substr","EditPageLink","link","smallHeaderMargins","headerMargins","StyledMarkdown","Markdown","MainContent","source","light","anchors","resetScroll","SectionButton","SectionHeader","visible","toggle","onClick","toUpperCase","Link","TutorialLink","ActiveBorder","SubsectionLink","active","index","children","TutorialSubsectionLink","Subsection","current","subsection","onClickLink","LinkFunc","subsections","SectionList","indent","numbered","Section","section","useEffect","SidebarListItem","show","some","prevCurrent","SidebarList","sections","alwaysVisible","DesktopSidebarWrapper","MobileWrapper","fadeSlideIn","fadeSlideOut","StyledHidden","MobileSidebarWrapper","MobileButton","IconWrapper","Sidebar","hide","SidebarSpacer","animated","unmount","StyledGrid","Content","sidebarAlwaysVisible","sidebar","Helmet","omitSpacer","meta","itemprop","property","concat","baseKeys","getTag","isArguments","isArray","isArrayLike","isBuffer","isPrototype","isTypedArray","hasOwnProperty","Object","prototype","module","exports","splice","tag","size","call","nativeKeys","overArg","keys","isFunction","isLength","baseGetTag","isObject","nativeObjectToString","toString"],"mappings":"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","file":"templates/default~Users/tainguyen/neo-one/packages/neo-one-website/src/pages/blog~Users/tainguyen/neo-one/pack~36560b99.f052bd7c.js","sourcesContent":["import * as React from 'react';\nimport { CoreLayout } from './CoreLayout';\n\ninterface Props {\n  readonly path: string;\n  readonly children: React.ReactNode;\n}\n\nexport const ContentLayout = (props: Props) => <CoreLayout {...props} content />;\n","import styled from '@emotion/styled';\nimport { Box } from '@neo-one/react-common';\nimport * as React from 'react';\nimport { ifProp, prop } from 'styled-tools';\nimport { AdjacentInfo } from '../../types';\nimport { StyledRouterLink } from '../StyledRouterLink';\n\nexport interface Props {\n  readonly adjacent: AdjacentInfo;\n  readonly next?: boolean;\n}\n\nconst ArticleText = styled(Box)<{ readonly next: boolean }, { readonly next: boolean }>`\n  ${prop('theme.fonts.axiformaRegular')};\n  ${prop('theme.fontStyles.caption')};\n  color: ${prop('theme.gray0')};\n  text-align: ${ifProp('next', 'right', 'left')};\n  padding-bottom: 8px;\n`;\n\n// tslint:disable-next-line: no-any\nconst StyledLink = styled(StyledRouterLink)<any>`\n  ${prop('theme.fonts.axiformaRegular')};\n  ${prop('theme.fontStyles.display1')};\n\n  @media (max-width: ${prop('theme.breakpoints.md')}) {\n    ${prop('theme.fontStyles.headline')};\n  }\n`;\n\nexport const AdjacentLink = ({ adjacent, next = false, ...props }: Props) => (\n  <Box {...props}>\n    <ArticleText next={next}>{next ? 'Next Article' : 'Previous Article'}</ArticleText>\n    <StyledLink linkColor=\"primary\" to={adjacent.slug}>\n      {adjacent.title}\n    </StyledLink>\n  </Box>\n);\n","// tslint:disable no-null-keyword\nimport styled from '@emotion/styled';\nimport { Box } from '@neo-one/react-common';\nimport * as React from 'react';\nimport { prop } from 'styled-tools';\nimport { AdjacentInfo } from '../../types';\nimport { LayoutWrapper } from '../common';\nimport { AdjacentLink } from './AdjacentLink';\n\nconst Wrapper = styled(Box)<{}, {}>`\n  display: grid;\n  justify-items: center;\n  padding-top: 64px;\n  padding-bottom: 64px;\n  background-color: ${prop('theme.gray6')};\n  width: 100%;\n`;\n\nconst LinkWrapper = styled(Box)<{}, {}>`\n  display: grid;\n  grid-auto-flow: column;\n  justify-content: space-between;\n  grid-gap: 32px;\n\n  @media (max-width: ${prop('theme.breakpoints.md')}) {\n    grid-gap: 16px;\n  }\n`;\n\ninterface Props {\n  readonly next?: AdjacentInfo;\n  readonly previous?: AdjacentInfo;\n}\n\nexport const DocFooter = ({ next, previous, ...props }: Props) =>\n  previous === undefined && next === undefined ? null : (\n    <Wrapper {...props}>\n      <LayoutWrapper>\n        <LinkWrapper>\n          {previous === undefined ? <Box /> : <AdjacentLink adjacent={previous} />}\n          {next === undefined ? <Box /> : <AdjacentLink next adjacent={next} />}\n        </LinkWrapper>\n      </LayoutWrapper>\n    </Wrapper>\n  );\n","// stylelint-disable\nimport styled from '@emotion/styled';\nimport { H2, ifProp, prop } from '@neo-one/react-common';\n\nexport const Title = styled(H2)<{ readonly subheading?: boolean }, { readonly subheading?: boolean }>`\n  ${prop('theme.fonts.axiformaBold')};\n  ${ifProp('subheading', prop('theme.fontStyles.headline'), prop('theme.fontStyles.display1'))};\n`;\n","import styled from '@emotion/styled';\nimport * as React from 'react';\nimport { ifProp, prop } from 'styled-tools';\nimport { Prism } from '../../../common';\nimport { StyledRouterLink } from '../../StyledRouterLink';\nimport { WordToken, WordTokens } from '../types';\n\nconst PUNCTUATION: readonly string[] = ['.', ',', '(', ')', '[', ']', '{', '}', '<', '>', ';', ':'];\n\nconst checkPunctuation = (idx: number, example: WordTokens, value: string) =>\n  PUNCTUATION.includes(value) || (idx !== example.length - 1 && PUNCTUATION.includes(example[idx + 1].value))\n    ? `${value}`\n    : `${value} `;\n\n// tslint:disable-next-line: no-any\nconst StyledReferenceLink = styled(StyledRouterLink)<any>`\n  font-family: ${ifProp('code', \"Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace\")};\n  ${prop('theme.fontStyles.subheading')};\n`;\n\ninterface Props {\n  readonly to: string;\n  readonly value: string;\n  readonly idx: number;\n  readonly example: WordTokens;\n  readonly code?: boolean;\n}\n\nconst ReferenceLink = ({ to, value, idx, example, code = false, ...props }: Props) => (\n  <StyledReferenceLink to={to} linkColor=\"accent\" code={code} key={idx} {...props}>\n    {checkPunctuation(idx, example, value)}\n  </StyledReferenceLink>\n);\n\nconst getHighlightedHtml = ({\n  idx,\n  example,\n  token,\n}: {\n  readonly idx: number;\n  readonly example: WordTokens;\n  readonly token: WordToken;\n}): { readonly __html: string } => ({\n  __html: Prism.highlight(checkPunctuation(idx, example, token.value), Prism.languages.typescript, 'typescript'),\n});\n\nexport const buildExample = (example: WordTokens) =>\n  example.map((token, idx) =>\n    token.slug === undefined ? (\n      <span key={idx} dangerouslySetInnerHTML={getHighlightedHtml({ idx, example, token })}></span>\n    ) : (\n      <ReferenceLink key={idx} to={token.slug} code idx={idx} value={token.value} example={example} />\n    ),\n  );\n\nexport const buildText = (example: WordTokens) =>\n  example.map((token, idx) =>\n    token.slug === undefined ? (\n      <span key={idx}>{checkPunctuation(idx, example, token.value)}</span>\n    ) : (\n      <ReferenceLink key={idx} to={token.slug} idx={idx} value={token.value} example={example} />\n    ),\n  );\n","import styled from '@emotion/styled';\nimport { Box } from '@neo-one/react-common';\nimport * as React from 'react';\nimport { prop } from 'styled-tools';\nimport { WordTokens } from '../types';\nimport { buildExample } from './utils';\n\ninterface Props {\n  readonly example: WordTokens;\n  readonly className?: string;\n}\n\nconst PreWrapper = styled(Box.withComponent('pre'))<{}, {}>`\n  background-color: ${prop('theme.gray6')};\n  ${prop('theme.fontStyles.subheading')};\n  font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;\n  padding: 16px;\n  border-radius: 4px;\n`;\n\nconst CodeWrapper = styled(Box.withComponent('code'))<{}, {}>`\n  ${prop('theme.fontStyles.subheading')};\n  font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;\n`;\n\nexport const Example = ({ example, className = 'language-typescript', ...props }: Props) => (\n  <PreWrapper className={className} {...props}>\n    <CodeWrapper className={className}>{buildExample(example)}</CodeWrapper>\n  </PreWrapper>\n);\n","import styled from '@emotion/styled';\nimport { Box } from '@neo-one/react-common';\nimport * as React from 'react';\nimport { prop } from 'styled-tools';\nimport { WordTokens } from '../types';\nimport { buildText } from './utils';\n\nexport const StyledText = styled(Box)<{}, {}>`\n  ${prop('theme.fontStyles.subheading')};\n  ${prop('theme.fonts.axiformaRegular')};\n`;\n\ninterface Props {\n  readonly text: WordTokens;\n}\n\nexport const Text = ({ text, ...props }: Props) => <StyledText {...props}>{buildText(text)}</StyledText>;\n","// tslint:disable no-null-keyword\nimport styled from '@emotion/styled';\nimport { Box } from '@neo-one/react-common';\nimport * as React from 'react';\nimport { prop } from 'styled-tools';\nimport { Example, Text, Title } from '../common';\nimport { ExtraData } from '../types';\n\nconst Wrapper = styled(Box)<{}, {}>`\n  display: grid;\n  grid-auto-flow: row;\n  grid-gap: 32px;\n\n  @media (max-width: ${prop('theme.breakpoints.md')}) {\n    grid-gap: 16px;\n  }\n`;\n\ninterface Props {\n  readonly data: ExtraData;\n}\n\nexport const Extra = ({ data, ...props }: Props) => (\n  <Wrapper {...props}>\n    {data.title === undefined ? null : <Title>{data.title}</Title>}\n    {data.code ? <Example example={data.data} /> : <Text text={data.data} />}\n  </Wrapper>\n);\n","import styled from '@emotion/styled';\nimport { Box } from '@neo-one/react-common';\nimport * as React from 'react';\nimport { prop } from 'styled-tools';\nimport { WordTokens } from '../types';\nimport { Text } from './Text';\nimport { Title } from './Title';\n\nconst Wrapper = styled(Box)<{}, {}>`\n  display: grid;\n  grid-auto-flow: row;\n  grid-gap: 32px;\n\n  @media (max-width: ${prop('theme.breakpoints.md')}) {\n    grid-gap: 16px;\n  }\n`;\n\ninterface Props {\n  readonly title: string;\n  readonly text: WordTokens;\n  readonly subheading?: boolean;\n}\n\nexport const TextSection = ({ title, text, subheading, ...props }: Props) => (\n  <Wrapper {...props}>\n    <Title subheading={subheading}>{title}</Title>\n    <Text text={text} />\n  </Wrapper>\n);\n","// tslint:disable no-null-keyword\nimport styled from '@emotion/styled';\nimport { Box } from '@neo-one/react-common';\nimport * as React from 'react';\nimport { prop } from 'styled-tools';\nimport { Text } from '../common';\nimport { Parameter, Property } from '../types';\n\nconst ParameterLayout = styled(Box)`\n  display: grid;\n  grid-auto-flow: column;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-gap: 16px;\n  justify-items: start;\n  align-items: baseline;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.3);\n`;\n\nconst Name = styled(Box)<{}, {}>`\n  ${prop('theme.fonts.axiformaBold')};\n  ${prop('theme.fontStyles.body1')};\n`;\n\ninterface Props {\n  readonly value: Parameter | Property;\n}\n\nexport const ParameterPropertyItem = ({ value, ...props }: Props) => (\n  <ParameterLayout {...props}>\n    <Name>{value.name}</Name>\n    {value.type === undefined ? null : <Text text={value.type} />}\n    <Text text={value.description} />\n  </ParameterLayout>\n);\n","import styled from '@emotion/styled';\nimport { Box } from '@neo-one/react-common';\nimport * as React from 'react';\nimport { prop } from 'styled-tools';\nimport { Title } from '../common';\nimport { Parameter, Property } from '../types';\nimport { ParameterPropertyItem } from './ParameterPropertyItem';\n\nconst ParameterLayout = styled(Box)<{}, {}>`\n  display: grid;\n  grid-auto-flow: row;\n  grid-gap: 32px;\n\n  @media (max-width: ${prop('theme.breakpoints.md')}) {\n    grid-gap: 16px;\n  }\n`;\n\ninterface Props {\n  readonly values?: ReadonlyArray<Parameter | Property>;\n  readonly subheading?: boolean;\n  readonly title: string;\n}\n\nexport const ParameterPropertyList = ({ values = [], subheading, title, ...props }: Props) => (\n  <ParameterLayout {...props}>\n    <Title subheading={subheading}>{title}</Title>\n    {values.map((value) => (\n      <ParameterPropertyItem key={value.name} value={value} />\n    ))}\n  </ParameterLayout>\n);\n","// tslint:disable no-null-keyword\nimport styled from '@emotion/styled';\nimport { Box } from '@neo-one/react-common';\nimport _ from 'lodash';\nimport * as React from 'react';\nimport { prop } from 'styled-tools';\nimport { TextSection } from '../common';\nimport { FunctionData } from '../types';\nimport { ParameterPropertyList } from './ParameterPropertyList';\n\nexport interface Props {\n  readonly functionData: FunctionData;\n  readonly subheading?: boolean;\n}\n\nconst Wrapper = styled(Box)<{}, {}>`\n  display: grid;\n  grid-auto-flow: row;\n  grid-gap: 32px;\n\n  @media (max-width: ${prop('theme.breakpoints.md')}) {\n    grid-gap: 16px;\n  }\n`;\n\nexport const ParameterReturns = ({ functionData, subheading, ...props }: Props) => (\n  <Wrapper {...props}>\n    {functionData.parameters === undefined || _.isEmpty(functionData.parameters) ? null : (\n      <ParameterPropertyList values={functionData.parameters} title=\"Parameters\" subheading={subheading} />\n    )}\n    {functionData.returns === undefined || _.isEmpty(functionData.returns) ? null : (\n      <TextSection title=\"Returns\" text={functionData.returns} subheading={subheading} />\n    )}\n  </Wrapper>\n);\n","// tslint:disable no-null-keyword\nimport styled from '@emotion/styled';\nimport { Box } from '@neo-one/react-common';\nimport * as React from 'react';\nimport { prop } from 'styled-tools';\nimport { Example, Text, Title } from '../common';\nimport { Method } from '../types';\nimport { Extra } from './Extra';\nimport { ParameterReturns } from './ParameterReturns';\n\nexport interface Props {\n  readonly method: Method;\n}\n\nconst Layout = styled(Box)<{}, {}>`\n  display: grid;\n  grid-auto-flow: row;\n  grid-gap: 16px;\n  background-color: ${prop('theme.gray1')};\n  border: 1px solid rgba(0, 0, 0, 0.3);\n\n  @media (max-width: ${prop('theme.breakpoints.md')}) {\n    grid-gap: 8px;\n  }\n`;\n\nconst Wrapper = styled(Box)<{}, {}>`\n  display: grid;\n  grid-auto-flow: row;\n  grid-gap: 16px;\n  padding: 16px 32px;\n\n  @media (max-width: ${prop('theme.breakpoints.md')}) {\n    grid-gap: 8px;\n  }\n`;\n\nconst StyledTitle = styled(Title)<{}, {}>`\n  background-color: ${prop('theme.gray1')};\n  padding: 16px 32px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.3);\n`;\n\nexport const MethodItem = ({ method, ...props }: Props) => (\n  <Layout {...props}>\n    <StyledTitle subheading>{method.title}</StyledTitle>\n    <Wrapper>\n      {method.description === undefined ? null : <Text text={method.description} />}\n      <Example example={method.definition} />\n      <ParameterReturns functionData={method.functionData} subheading />\n      {method.extra === undefined ? null : method.extra.map((extra) => <Extra data={extra} key={extra.title} />)}\n    </Wrapper>\n  </Layout>\n);\n","import styled from '@emotion/styled';\nimport { Box } from '@neo-one/react-common';\nimport * as React from 'react';\nimport { prop } from 'styled-tools';\nimport { Title } from '../common';\nimport { Method } from '../types';\nimport { MethodItem } from './MethodItem';\n\nconst ParameterLayout = styled(Box)<{}, {}>`\n  display: grid;\n  grid-auto-flow: row;\n  grid-gap: 32px;\n\n  @media (max-width: ${prop('theme.breakpoints.md')}) {\n    grid-gap: 16px;\n  }\n`;\n\ninterface Props {\n  readonly methods: readonly Method[];\n  readonly staticMethods?: boolean;\n}\n\nexport const MethodList = ({ methods, staticMethods, ...props }: Props) => (\n  <ParameterLayout {...props}>\n    <Title>{staticMethods ? 'Static Methods' : 'Methods'}</Title>\n    {methods.map((method) => (\n      <MethodItem key={method.title} method={method} />\n    ))}\n  </ParameterLayout>\n);\n","// tslint:disable no-null-keyword\nimport styled from '@emotion/styled';\nimport { Box } from '@neo-one/react-common';\nimport _ from 'lodash';\nimport * as React from 'react';\nimport { prop } from 'styled-tools';\nimport { Title } from '../common';\nimport { ClassData, InterfaceData } from '../types';\nimport { MethodItem } from './MethodItem';\nimport { MethodList } from './MethodList';\nimport { ParameterPropertyList } from './ParameterPropertyList';\n\nexport interface Props {\n  readonly data: ClassData | InterfaceData;\n}\n\nconst Wrapper = styled(Box)<{}, {}>`\n  display: grid;\n  grid-auto-flow: row;\n  grid-gap: 40px;\n\n  @media (max-width: ${prop('theme.breakpoints.md')}) {\n    grid-gap: 24px;\n  }\n`;\n\nexport const InterfaceClassItems = ({ data, ...props }: Props) => (\n  <Wrapper {...props}>\n    {data.constructorDefinition === undefined ? null : (\n      <Wrapper>\n        <Title>Constructor</Title>\n        <MethodItem method={data.constructorDefinition} />\n      </Wrapper>\n    )}\n    {data.properties === undefined || _.isEmpty(data.properties) ? null : (\n      <ParameterPropertyList values={data.properties} title=\"Properties\" />\n    )}\n    {data.staticMethods === undefined || _.isEmpty(data.staticMethods) ? null : (\n      <MethodList methods={data.staticMethods} staticMethods />\n    )}\n    {data.methods === undefined || _.isEmpty(data.methods) ? null : <MethodList methods={data.methods} />}\n  </Wrapper>\n);\n","// stylelint-disable\nimport styled from '@emotion/styled';\nimport { Box } from '@neo-one/react-common';\nimport * as React from 'react';\nimport { ifProp, prop, switchProp } from 'styled-tools';\nimport { TypeFilterOptions } from '../types';\n\ninterface Props {\n  readonly type: TypeFilterOptions;\n  readonly fullIcon?: boolean;\n}\n\n// tslint:disable-next-line: no-unused\ninterface StyledIconBoxProps {\n  readonly bg: TypeFilterOptions;\n  readonly fullIcon: boolean;\n}\n\n// tslint:disable-next-line: no-any\nconst IconBox = styled(Box)<any>`\n  background-color: ${switchProp('bg', {\n    All: 'transparent',\n    Class: prop('theme.primary'),\n    Const: prop('theme.gray6'),\n    Function: prop('theme.warning'),\n    Interface: prop('theme.accent'),\n    Enum: prop('theme.gray3'),\n    Decorator: prop('theme.error'),\n    'Type Alias': prop('theme.secondary'),\n  })};\n  color: ${switchProp(\n    'bg',\n    {\n      All: 'transparent',\n    },\n    prop('theme.gray0'),\n  )};\n  ${prop('theme.fontStyles.body2')};\n  ${prop('theme.fonts.axiformaBold')};\n  border-radius: 2px;\n  width: ${ifProp('fullIcon', '80px', '24px')};\n  height: 24px;\n  text-align: center;\n  padding-top: 2px;\n`;\n\nconst letterIcon = (type: TypeFilterOptions) => (type === 'Const' ? 'K' : type.charAt(0));\n\nexport const TypeIcon = ({ type, fullIcon = false, ...props }: Props) => (\n  <IconBox bg={type} fullIcon={fullIcon} {...props}>\n    {fullIcon ? type : letterIcon(type)}\n  </IconBox>\n);\n","import styled from '@emotion/styled';\nimport { Box } from '@neo-one/react-common';\nimport * as React from 'react';\nimport { prop } from 'styled-tools';\nimport { Example, Text, TypeIcon } from '../common';\nimport { ReferenceType, WordTokens } from '../types';\n\ninterface Props {\n  readonly type: ReferenceType;\n  readonly description: WordTokens;\n  readonly definition: WordTokens;\n}\n\nconst Wrapper = styled(Box)<{}, {}>`\n  display: grid;\n  grid-gap: 16px;\n\n  @media (max-width: ${prop('theme.breakpoints.md')}) {\n    padding-left: 16px;\n    padding-right: 16px;\n  }\n`;\n\nexport const ReferenceHeader = ({ type, description, definition, ...props }: Props) => (\n  <Wrapper {...props}>\n    <TypeIcon type={type} fullIcon />\n    <Text text={description} />\n    <Example example={definition} />\n  </Wrapper>\n);\n","// tslint:disable no-null-keyword\nimport styled from '@emotion/styled';\nimport { Box } from '@neo-one/react-common';\nimport * as React from 'react';\nimport { prop } from 'styled-tools';\nimport { ReferenceItem } from '../types';\nimport { Extra } from './Extra';\nimport { InterfaceClassItems } from './InterfaceClassItems';\nimport { ParameterPropertyList } from './ParameterPropertyList';\nimport { ParameterReturns } from './ParameterReturns';\nimport { ReferenceHeader } from './ReferenceHeader';\n\nexport interface Props {\n  readonly content: ReferenceItem;\n}\n\nconst PageLayout = styled(Box)<{}, {}>`\n  display: grid;\n  grid-gap: 32px;\n\n  @media (max-width: ${prop('theme.breakpoints.md')}) {\n    grid-gap: 16px;\n  }\n`;\n\nexport const ReferencePage = ({ content, ...props }: Props) => (\n  <PageLayout {...props}>\n    <ReferenceHeader type={content.type} description={content.description} definition={content.definition} />\n    {content.functionData === undefined ? null : <ParameterReturns functionData={content.functionData} />}\n    {content.classData === undefined ? null : <InterfaceClassItems data={content.classData} />}\n    {content.enumData === undefined ? null : (\n      <ParameterPropertyList values={content.enumData.members} title=\"Members\" />\n    )}\n    {content.constData === undefined ? null : <InterfaceClassItems data={content.constData} />}\n    {content.interfaceData === undefined ? null : <InterfaceClassItems data={content.interfaceData} />}\n    {content.extra === undefined ? null : content.extra.map((extra) => <Extra data={extra} key={extra.title} />)}\n  </PageLayout>\n);\n","import styled from '@emotion/styled';\nimport { Box } from '@neo-one/react-common';\nimport * as React from 'react';\nimport { prop } from 'styled-tools';\nimport { StyledRouterLink } from '../StyledRouterLink';\nimport { TypeIcon } from './common';\nimport { ReferenceType } from './types';\n\ninterface Props {\n  readonly title: string;\n  readonly path: string;\n  readonly type: ReferenceType;\n}\n\n// tslint:disable-next-line: no-any\nconst StyledLink = styled(StyledRouterLink)<any>`\n  ${prop('theme.fontStyles.subheading')};\n  ${prop('theme.fonts.axiformaRegular')};\n`;\n\nconst Wrapper = styled(Box)`\n  display: grid;\n  grid-auto-flow: column;\n  justify-content: start;\n  gap: 8px;\n`;\n\nexport const ReferenceLink = ({ title, path, type, ...props }: Props) => (\n  <Wrapper {...props}>\n    <TypeIcon type={type} />\n    <StyledLink to={path} linkColor=\"gray\">\n      {title}\n    </StyledLink>\n  </Wrapper>\n);\n","import styled from '@emotion/styled';\nimport { Box } from '@neo-one/react-common';\nimport * as React from 'react';\nimport { prop } from 'styled-tools';\nimport { TypeIcon } from './common';\nimport { TypeFilterOptions } from './types';\n\ninterface Props {\n  readonly type: TypeFilterOptions;\n}\n\nconst StyledBox = styled(Box)<{}, {}>`\n  ${prop('theme.fontStyles.subheading')};\n  ${prop('theme.fonts.axiformaRegular')};\n`;\n\nconst Wrapper = styled(Box)`\n  display: grid;\n  grid-auto-flow: column;\n  justify-content: start;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const TypeFilterOption = ({ type, ...props }: Props) => (\n  <Wrapper {...props}>\n    <TypeIcon type={type} />\n    <StyledBox>{type}</StyledBox>\n  </Wrapper>\n);\n","export type ReferenceType = 'Function' | 'Class' | 'Const' | 'Interface' | 'Enum' | 'Decorator' | 'Type Alias';\n\nexport type TypeFilterOptions = 'All' | ReferenceType;\n\nexport const TYPE_FILTER_OPTIONS: readonly TypeFilterOptions[] = [\n  'All',\n  'Function',\n  'Class',\n  'Const',\n  'Interface',\n  'Enum',\n  'Decorator',\n  'Type Alias',\n];\n\nexport interface WordToken {\n  readonly slug?: string | undefined;\n  readonly value: string;\n}\n\nexport type WordTokens = readonly WordToken[];\n\nexport interface Parameter {\n  readonly name: string;\n  readonly type?: WordTokens;\n  readonly description: WordTokens;\n}\n\nexport interface FunctionData {\n  readonly parameters?: readonly Parameter[];\n  readonly returns?: WordTokens;\n}\n\nexport interface Method {\n  readonly functionData: FunctionData;\n  readonly title: string;\n  readonly description?: WordTokens;\n  readonly definition: WordTokens;\n  readonly extra?: readonly ExtraData[];\n}\n\nexport interface Property extends Parameter {}\n\nexport interface InterfaceData {\n  readonly constructorDefinition?: Method;\n  readonly properties?: readonly Property[];\n  readonly methods?: readonly Method[];\n  readonly staticMethods?: readonly Method[];\n}\n\nexport interface ClassData extends InterfaceData {}\n\nexport interface EnumMember extends Parameter {}\n\nexport interface EnumData {\n  readonly members: readonly EnumMember[];\n}\n\nexport interface ConstData extends InterfaceData {}\n\nexport interface ExtraData {\n  readonly title?: string;\n  readonly code?: boolean;\n  readonly data: WordTokens;\n}\n\nexport interface ReferenceItem {\n  readonly name: string;\n  readonly slug: string;\n  readonly type: ReferenceType;\n  readonly description: WordTokens;\n  readonly definition: WordTokens;\n  readonly functionData?: FunctionData;\n  readonly classData?: ClassData;\n  readonly enumData?: EnumData;\n  readonly constData?: ConstData;\n  readonly interfaceData?: InterfaceData;\n  readonly extra?: readonly ExtraData[];\n}\n","// tslint:disable no-any\nimport styled from '@emotion/styled';\nimport { Select } from '@neo-one/react-common';\nimport * as React from 'react';\nimport { TypeFilterOption } from './TypeFilterOption';\nimport { TYPE_FILTER_OPTIONS, TypeFilterOptions } from './types';\n\nconst StyledSelect = styled(Select)`\n  width: 144px;\n\n  & > .react-select__control {\n    background-color: white;\n  }\n`;\n\ninterface Props {\n  readonly selected?: string;\n  readonly onChange: (value: string) => void;\n}\n\nconst createFormatOptionLabel = (option: TypeFilterOptions): React.ReactNode => <TypeFilterOption type={option} />;\n\nexport const TypeFilter = ({ selected, onChange, ...props }: Props) => (\n  <StyledSelect\n    {...props}\n    formatOptionLabel={createFormatOptionLabel}\n    placeholder=\"Select Type\"\n    value={[`${selected}`]}\n    options={TYPE_FILTER_OPTIONS}\n    onChange={onChange}\n  />\n);\n","import styled from '@emotion/styled';\nimport { Box, TextInput } from '@neo-one/react-common';\nimport * as React from 'react';\nimport { ReferenceLink } from './ReferenceLink';\nimport { TypeFilter } from './TypeFilter';\nimport { ReferenceItem } from './types';\n\nconst { useState } = React;\n\nconst ReferenceLayout = styled(Box)`\n  display: grid;\n  min-width: 0;\n  grid-template-columns: repeat(auto-fill, 400px);\n  grid-gap: 8px;\n`;\n\nconst Wrapper = styled(Box)`\n  display: grid;\n  gap: 16px;\n  min-width: 0;\n`;\n\nconst StyledInput = styled(TextInput)`\n  width: 144px;\n`;\n\nconst FilterWrapper = styled(Box)`\n  display: grid;\n  grid-auto-flow: column;\n  justify-content: start;\n  align-content: center;\n  gap: 16px;\n`;\n\ninterface Props {\n  readonly content: readonly ReferenceItem[];\n}\n\nexport const ReferenceGrid = ({ content, ...props }: Props) => {\n  const [typeFilter, setTypeFilter] = useState('All');\n  const [textFilter, setTextFilter] = useState('');\n\n  return (\n    <Wrapper {...props}>\n      <FilterWrapper>\n        <TypeFilter selected={typeFilter} onChange={setTypeFilter} />\n        <StyledInput\n          placeholder=\"Filter\"\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => setTextFilter(event.target.value)}\n        />\n      </FilterWrapper>\n      <ReferenceLayout>\n        {content\n          .filter(\n            (reference) =>\n              (typeFilter === 'All' ? true : typeFilter.toLowerCase() === reference.type.toLowerCase()) &&\n              (textFilter === '' ? true : reference.name.toLowerCase().includes(textFilter.toLowerCase())),\n          )\n          .map(({ name, type, slug }) => (\n            <ReferenceLink title={name} type={type} path={slug} key={slug} />\n          ))}\n      </ReferenceLayout>\n    </Wrapper>\n  );\n};\n","import * as React from 'react';\nimport { ReferenceItemContent, ReferenceItemsContent } from '../content';\nimport { ReferencePage } from './components';\nimport { ReferenceGrid } from './ReferenceGrid';\n\ninterface Props {\n  readonly content: ReferenceItemsContent | ReferenceItemContent;\n}\n\nexport const ReferenceContent = ({ content, ...props }: Props) =>\n  content.type === 'referenceItems' ? (\n    <ReferenceGrid content={content.value.map((reference) => reference.content.value)} {...props} />\n  ) : (\n    <ReferencePage content={content.value} />\n  );\n","import styled from '@emotion/styled';\nimport { Box, Link } from '@neo-one/react-common';\nimport * as React from 'react';\nimport { prop } from 'styled-tools';\nimport { Author } from './types';\n\nconst Text = styled(Box)<{}, {}>`\n  ${prop('theme.fonts.axiformaRegular')}\n  ${prop('theme.fontStyles.subheading')}\n  color: ${prop('theme.black')};\n`;\n\nconst StyledLink = styled(Link)<{}, {}>`\n  ${prop('theme.fonts.axiformaRegular')}\n  ${prop('theme.fontStyles.subheading')}\n`;\n\ninterface Props {\n  readonly author: Author;\n  readonly date: string;\n}\n\nexport const DateAndAuthor = ({ author, date, ...props }: Props) => {\n  const [year, month, day] = date.split('-');\n  const dateValue = new Date(parseInt(year, 10), parseInt(month, 10) - 1, parseInt(day, 10));\n\n  return (\n    <Text {...props}>\n      {dateValue.toLocaleDateString()} by{' '}\n      <StyledLink linkColor=\"accent\" href={author.twitter} target=\"_blank\">\n        {author.name}\n      </StyledLink>\n    </Text>\n  );\n};\n","// tslint:disable no-null-keyword\nimport styled from '@emotion/styled';\nimport { Link } from '@neo-one/react-common';\nimport * as React from 'react';\nimport { prop } from 'styled-tools';\n\nconst StyledLink = styled(Link)<{}, {}>`\n  ${prop('theme.fonts.axiformaRegular')}\n  ${prop('theme.fontStyles.subheading')}\n`;\n\nconst Div = styled.div`\n  margin-top: 80px;\n`;\n\ninterface Props {\n  readonly link: string;\n}\n\nconst baseLink = 'https://github.com/neo-one-suite/neo-one/blob/master/';\nconst cleanLink = (input: string): string => (input[0] === '/' ? input.substr(1, input.length) : input);\n\nexport const EditPageLink = ({ link }: Props) => (\n  <Div>\n    <StyledLink linkColor=\"accent\" href={baseLink + cleanLink(link)} target=\"_blank\">\n      Edit this page\n    </StyledLink>\n  </Div>\n);\n","// tslint:disable no-null-keyword\nimport { css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { Box, prop } from '@neo-one/react-common';\nimport * as React from 'react';\nimport { Markdown } from '../../elements';\nimport { ReferenceContent } from '../reference';\nimport { ContentType } from './Content';\nimport { DateAndAuthor } from './DateAndAuthor';\nimport { EditPageLink } from './EditPageLink';\nimport { Author } from './types';\n\nconst Wrapper = styled(Box)`\n  padding-top: 16px;\n  padding-bottom: 16px;\n  min-width: 0;\n\n  @media (min-width: ${prop('theme.breakpoints.md')}) {\n    padding-top: 64px;\n    padding-bottom: 64px;\n  }\n`;\n\nconst smallHeaderMargins = css`\n  margin-top: 16px;\n  margin-bottom: 8px;\n`;\n\nconst headerMargins = css`\n  margin-top: 32px;\n  margin-bottom: 24px;\n`;\n\nconst StyledMarkdown = styled(Markdown)`\n  ${prop('theme.fontStyles.body2')};\n  ${prop('theme.fonts.axiformaBook')};\n  color: ${prop('theme.black')};\n  min-width: 0;\n\n  & table {\n    border-collapse: collapse;\n  }\n  & td, th {\n    padding: 8px;\n  }\n  & th {\n    border: 1px solid ${prop('theme.black')};\n  }\n  & td {\n    border-left: 1px solid ${prop('theme.black')};\n    border-right: 1px solid ${prop('theme.black')};\n    border-top: 1px solid ${prop('theme.black')};\n  }\n  & th {\n    border-top: none;\n  }\n  & th:last-child {\n    border-right: none;\n  }\n  & th:first-child {\n    border-left: none;\n  }\n  & td:first-child {\n    border-left: none;\n  }\n  & td:last-child {\n    border-right: none;\n  }\n\n  @media (min-width: ${prop('theme.breakpoints.md')}) {\n    ${prop('theme.fontStyles.subheading')};\n  }\n\n  & h1 {\n    ${prop('theme.fontStyles.display2')};\n    margin-top: 16px;\n    margin-bottom: 24px;\n\n    @media (min-width: ${prop('theme.breakpoints.md')}) {\n      ${prop('theme.fontStyles.display3')};\n    }\n  }\n\n  & h2 {\n    ${prop('theme.fontStyles.headline')};\n    ${smallHeaderMargins}\n\n    @media (min-width: ${prop('theme.breakpoints.md')}) {\n      ${prop('theme.fontStyles.display1')};\n      ${headerMargins}\n    }\n  }\n\n  & h3 {\n    ${prop('theme.fontStyles.headline')};\n    ${smallHeaderMargins}\n\n    @media (min-width: ${prop('theme.breakpoints.md')}) {\n      ${prop('theme.fontStyles.headline')};\n      ${headerMargins}\n    }\n  }\n\n  & h4 {\n    ${prop('theme.fontStyles.body2')};\n    ${smallHeaderMargins}\n\n    @media (min-width: ${prop('theme.breakpoints.md')}) {\n      ${prop('theme.fontStyles.subheading')};\n      ${headerMargins}\n    }\n  }\n\n  & h5 {\n    ${prop('theme.fontStyles.body2')};\n    ${smallHeaderMargins}\n\n    @media (min-width: ${prop('theme.breakpoints.md')}) {\n      ${prop('theme.fontStyles.subheading')};\n      ${headerMargins}\n    }\n  }\n\n  & > p {\n    max-width: ${prop('theme.constants.content.maxWidth')};\n  }\n\n  & > ol {\n    max-width: ${prop('theme.constants.content.maxWidth')};\n  }\n\n  & > ul {\n    max-width: ${prop('theme.constants.content.maxWidth')};\n  }\n\n  & table {\n    border: none;\n    border-spacing: 0;\n    overflow-x: auto;\n    display: block;\n  }\n\n  & tr:nth-child(even) {\n    background-color: ${prop('theme.gray2')};\n  }\n\n  & tr:nth-child(odd) {\n    background-color: ${prop('theme.grayHalf')};\n  }\n\n  &&& > p:nth-child(1) {\n    ${prop('theme.fonts.axiformaThin')};\n    ${prop('theme.fontStyles.subheading')};\n    color: ${prop('theme.gray6')};\n    margin-bottom: 16px;\n    margin-top: 16px;\n    max-width: unset;\n\n    @media (min-width: ${prop('theme.breakpoints.md')}) {\n      ${prop('theme.fontStyles.headline')};\n      margin-bottom: 40px;\n      margin-top: 40px;\n    }\n  }\n\n  &&&& img {\n    max-width: 100%;\n  }\n\n  &&&& p img {\n    max-width: 100%;\n  }\n`;\n\nconst Title = styled.h1`\n  margin-top: 16px;\n  margin-bottom: 24px;\n  margin-left: 0;\n  margin-right: 0;\n  ${prop('theme.fontStyles.display2')};\n  color: ${prop('theme.black')};\n  ${prop('theme.fonts.axiformaBook')};\n  font-weight: 700;\n\n  @media (min-width: ${prop('theme.breakpoints.md')}) {\n    ${prop('theme.fontStyles.display3')};\n  }\n`;\n\ninterface Props {\n  readonly title: string;\n  readonly content: ContentType;\n  readonly date?: string;\n  readonly link: string;\n  readonly author?: Author;\n}\n\nexport const MainContent = ({ content, title, date, link, author, ...props }: Props) => (\n  <Wrapper {...props}>\n    <Title>{title}</Title>\n    {date === undefined || author === undefined ? null : <DateAndAuthor date={date} author={author} />}\n    {content.type === 'markdown' ? (\n      <>\n        <StyledMarkdown source={content.value} linkColor=\"accent\" light anchors resetScroll />\n        <EditPageLink link={link} />\n      </>\n    ) : (\n      <ReferenceContent content={content} />\n    )}\n  </Wrapper>\n);\n","import styled from '@emotion/styled';\nimport { ButtonBase } from '@neo-one/react-common';\nimport * as React from 'react';\nimport { MdExpandLess, MdExpandMore } from 'react-icons/md';\nimport { prop } from 'styled-tools';\n\ninterface Props {\n  readonly title: string;\n  readonly visible: boolean;\n  readonly toggle?: () => void;\n}\n\nconst SectionButton = styled(ButtonBase)<{}, {}>`\n  ${prop('theme.fonts.axiformaBold')};\n  ${prop('theme.fontStyles.subheading')};\n  line-height: 3;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const SectionHeader = ({ title, visible, toggle, ...props }: Props) => (\n  <SectionButton {...props} onClick={toggle}>\n    {title.toUpperCase()}\n    {visible ? <MdExpandLess /> : <MdExpandMore />}\n  </SectionButton>\n);\n","// tslint:disable no-null-keyword\nimport styled from '@emotion/styled';\nimport { Link as BaseLink } from '@neo-one/react-common';\nimport React from 'react';\nimport { ifProp, prop } from 'styled-tools';\nimport { StyledRouterLink } from '../StyledRouterLink';\n\n// tslint:disable-next-line: no-any\nconst Link = styled(StyledRouterLink)<any>`\n  ${ifProp('active', prop('theme.fonts.axiformaBold'), prop('theme.fonts.axiformaRegular'))};\n  ${prop('theme.fontStyles.subheading')};\n\n  &:hover {\n    color: ${prop('theme.accent')};\n  }\n\n  &:focus {\n    color: ${prop('theme.accent')};\n  }\n\n  &.active {\n    color: ${prop('theme.accent')};\n  }\n`;\n\nconst TutorialLink = styled<typeof BaseLink, { readonly active: boolean }>(BaseLink)<{}, {}>`\n  ${ifProp('active', prop('theme.fonts.axiformaBold'), prop('theme.fonts.axiformaRegular'))};\n  ${prop('theme.fontStyles.subheading')};\n\n  &:hover {\n    color: ${prop('theme.accent')};\n  }\n\n  &:focus {\n    color: ${prop('theme.accent')};\n  }\n\n  &.active {\n    color: ${prop('theme.accent')};\n  }\n`;\n\nconst ActiveBorder = styled.span<{}, {}>`\n  width: 4px;\n  height: 24px;\n  border-left: 4px solid ${prop('theme.accent')};\n  padding-left: 16px;\n  position: absolute;\n  left: -16px;\n`;\n\nconst Wrapper = styled.li``;\n\ninterface Props {\n  readonly active: boolean;\n  readonly title: string;\n  readonly slug: string;\n  readonly index?: number;\n  readonly onClick?: () => void;\n  readonly children?: React.ReactNode;\n}\n\nexport const SubsectionLink = ({ active, title, index, slug, children, ...props }: Props) => (\n  <Wrapper {...props}>\n    <Link active={active} linkColor=\"gray\" to={slug}>\n      {active ? <ActiveBorder /> : null}\n      {index === undefined ? title : `${index}. ${title}`}\n    </Link>\n    {children}\n  </Wrapper>\n);\n\nexport const TutorialSubsectionLink = ({ active, title, index, slug, children, ...props }: Props) => (\n  <Wrapper {...props}>\n    <TutorialLink active={active} linkColor=\"gray\" href={slug}>\n      {active ? <ActiveBorder /> : null}\n      {index === undefined ? title : `${index}. ${title}`}\n    </TutorialLink>\n    {children}\n  </Wrapper>\n);\n","// tslint:disable no-null-keyword\nimport styled from '@emotion/styled';\nimport { List } from '@neo-one/react-common';\nimport React from 'react';\nimport { ifProp } from 'styled-tools';\nimport { SubsectionData } from '../../types';\nimport { SubsectionLink, TutorialSubsectionLink } from './SubsectionLink';\n\ninterface SubsectionProps {\n  readonly current: string;\n  readonly subsection: SubsectionData;\n  readonly index?: number;\n  readonly onClickLink?: () => void;\n}\n\nconst Subsection = ({ current, index, subsection, onClickLink, ...props }: SubsectionProps) => {\n  const LinkFunc = subsection.slug.includes('/tutorial#') ? TutorialSubsectionLink : SubsectionLink;\n\n  return (\n    <LinkFunc\n      active={current === subsection.slug}\n      title={subsection.title}\n      slug={subsection.slug}\n      index={index}\n      onClick={onClickLink}\n      {...props}\n    >\n      {subsection.subsections === undefined ? null : (\n        <SectionList current={current} subsections={subsection.subsections} onClickLink={onClickLink} indent />\n      )}\n    </LinkFunc>\n  );\n};\n\ninterface Props {\n  readonly current: string;\n  readonly subsections: readonly SubsectionData[];\n  readonly onClickLink?: () => void;\n  readonly indent?: boolean;\n  readonly numbered?: boolean;\n}\n\nconst Wrapper = styled(List)<{ readonly indent: boolean }>`\n  list-style-type: none;\n  ${ifProp('indent', 'margin-left: 16px', '')};\n`;\n\nexport const SectionList = ({ numbered, current, subsections, indent = false, onClickLink, ...props }: Props) => (\n  <Wrapper indent={indent} {...props}>\n    {subsections.map((subsection, idx) => (\n      <Subsection\n        key={subsection.slug}\n        index={numbered ? idx : undefined}\n        current={current}\n        subsection={subsection}\n        onClickLink={onClickLink}\n      />\n    ))}\n  </Wrapper>\n);\n","import { Box, Hidden } from '@neo-one/react-common';\nimport * as React from 'react';\nimport { SectionData } from '../../types';\nimport { SectionHeader } from './SectionHeader';\nimport { SectionList } from './SectionList';\n\ninterface Props {\n  readonly current: string;\n  readonly section: SectionData;\n  readonly visible: boolean;\n  readonly onClickLink?: () => void;\n  readonly toggle?: () => void;\n}\n\nexport const Section = ({ current, section, visible, toggle, onClickLink, ...props }: Props) => (\n  <Box {...props}>\n    <SectionHeader title={section.title} visible={visible} toggle={toggle} />\n    <Hidden visible={visible}>\n      <SectionList\n        numbered={section.numbered}\n        current={current}\n        subsections={section.subsections}\n        onClickLink={onClickLink}\n      />\n    </Hidden>\n  </Box>\n);\n","import styled from '@emotion/styled';\nimport { Box, useHidden, usePrevious } from '@neo-one/react-common';\nimport * as React from 'react';\nimport { prop } from 'styled-tools';\nimport { SectionData } from '../../types';\nimport { Section } from './Section';\n\nconst { useEffect } = React;\n\nconst Wrapper = styled(Box)<{}, {}>`\n  background-color: ${prop('theme.gray1')};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  padding-left: 16px;\n  padding-right: 16px;\n  height: 100%;\n\n  @media (min-width: ${prop('theme.breakpoints.md')}) {\n    padding-top: 64px;\n    padding-bottom: 64px;\n    padding-left: 40px;\n    padding-right: 40px;\n  }\n`;\n\ninterface SidebarListItemProps {\n  readonly current: string;\n  readonly section: SectionData;\n  readonly onClickLink?: () => void;\n}\n\nconst SidebarListItem = ({ current, section, onClickLink, ...props }: SidebarListItemProps) => {\n  const { visible, show, toggle } = useHidden(section.subsections.some((subsection) => current === subsection.slug));\n  const prevCurrent = usePrevious(current);\n  useEffect(() => {\n    if (current !== prevCurrent && !visible && section.subsections.some((subsection) => current === subsection.slug)) {\n      show();\n    }\n  }, [current, visible, prevCurrent, show, section]);\n\n  return (\n    <Section\n      {...props}\n      current={current}\n      section={section}\n      visible={visible}\n      toggle={toggle}\n      onClickLink={onClickLink}\n    />\n  );\n};\n\ninterface Props {\n  readonly current: string;\n  readonly sections: readonly SectionData[];\n  readonly alwaysVisible: boolean;\n  readonly onClickLink?: () => void;\n}\n\nexport const SidebarList = ({ sections, current, alwaysVisible, onClickLink, ...props }: Props) => (\n  <Wrapper {...props}>\n    {sections.map((section) =>\n      alwaysVisible ? (\n        <Section key={section.title} current={current} section={section} visible onClickLink={onClickLink} />\n      ) : (\n        <SidebarListItem key={section.title} current={current} section={section} onClickLink={onClickLink} />\n      ),\n    )}\n  </Wrapper>\n);\n","import { keyframes } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { Box, ButtonBase, Hidden, useHidden } from '@neo-one/react-common';\nimport * as React from 'react';\nimport { MdClose, MdUnfoldMore } from 'react-icons/md';\nimport { prop } from 'styled-tools';\nimport { SectionData } from '../../types';\nimport { SidebarSpacer } from '../common';\nimport { SidebarList } from './SidebarList';\n\nconst Wrapper = styled(Box)``;\n\nconst DesktopSidebarWrapper = styled(Box)<{}, {}>`\n  background-color: ${prop('theme.gray1')};\n  position: fixed;\n  height: 100vh;\n  overflow-y: auto;\n  margin-right: -1000px;\n  padding-right: 1000px;\n  padding-top: 72px;\n  top: 0;\n  z-index: 2;\n\n  @media (min-width: ${prop('theme.breakpoints.sm')}) {\n    padding-top: 80px;\n  }\n`;\n\nconst MobileWrapper = styled(Box)<{}, {}>`\n  @media (min-width: ${prop('theme.breakpoints.sm')}) {\n    display: none;\n  }\n`;\n\nconst fadeSlideIn = keyframes`\n  0% {\n    transform: translateY(40px);\n    opacity: 0;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`;\n\nconst fadeSlideOut = keyframes`\n  0% {\n    opacity: 1;\n  }\n\n  100% {\n    transform: translateY(40px);\n    opacity: 0;\n  }\n`;\n\nconst StyledHidden = styled(Hidden)`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 2;\n  height: 100vh;\n  overflow-y: auto;\n\n  &[aria-hidden='false'] {\n    animation: ${fadeSlideIn} 500ms;\n  }\n\n  &[aria-hidden='true'] {\n    animation: ${fadeSlideOut} 500ms;\n  }\n`;\n\nconst MobileSidebarWrapper = styled(Box)<{}, {}>`\n  width: 100%;\n  background-color: ${prop('theme.gray1')};\n`;\n\nconst MobileButton = styled(ButtonBase)<{}, {}>`\n  position: fixed;\n  bottom: 48px;\n  right: 24px;\n  background-color: ${prop('theme.black')};\n  border: 1px solid ${prop('theme.gray4')};\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.3);\n  border-radius: 64px;\n  color: ${prop('theme.primary')};\n  width: 64px;\n  height: 64px;\n  padding: 0;\n  transform: translate(0, 0) scale(1);\n  transition: transform 0.15s ease-in-out;\n  cursor: pointer;\n  outline: none;\n  z-index: 5;\n\n  &:hover {\n    transform: translate(0, -2px) scale(1);\n  }\n\n  &:active {\n    transform: translate(0, -2px) scale(1);\n  }\n\n  &:focus {\n    transform: translate(0, -2px) scale(1);\n  }\n`;\n\nconst IconWrapper = styled(Box)`\n  display: grid;\n  width: 100%;\n  height: 100%;\n  justify-items: center;\n  align-items: center;\n\n  & > svg {\n    width: 32px;\n    height: 32px;\n  }\n`;\n\ninterface Props {\n  readonly current: string;\n  readonly alwaysVisible: boolean;\n  readonly sections: readonly SectionData[];\n}\n\nexport const Sidebar = ({ current, alwaysVisible, sections, ...props }: Props) => {\n  const { visible, hide, toggle } = useHidden();\n\n  return (\n    <Wrapper {...props}>\n      <SidebarSpacer>\n        <DesktopSidebarWrapper>\n          <SidebarList current={current} alwaysVisible={alwaysVisible} sections={sections} />\n        </DesktopSidebarWrapper>\n      </SidebarSpacer>\n      <MobileWrapper>\n        <StyledHidden visible={visible} animated unmount>\n          <MobileSidebarWrapper>\n            <SidebarList current={current} alwaysVisible sections={sections} onClickLink={hide} />\n          </MobileSidebarWrapper>\n        </StyledHidden>\n        <MobileButton onClick={toggle}>\n          <IconWrapper>{visible ? <MdClose /> : <MdUnfoldMore />}</IconWrapper>\n        </MobileButton>\n      </MobileWrapper>\n    </Wrapper>\n  );\n};\n","// tslint:disable-next-line no-import-side-effect\nimport styled from '@emotion/styled';\nimport { Box } from '@neo-one/react-common';\nimport * as React from 'react';\nimport { AdjacentInfo, SectionData } from '../../types';\nimport { LayoutWrapper } from '../common';\nimport { Helmet } from '../Helmet';\nimport { ReferenceItem } from '../reference';\nimport { DocFooter } from './DocFooter';\nimport { MainContent } from './MainContent';\nimport { Sidebar } from './Sidebar';\nimport { Author } from './types';\n\nconst StyledGrid = styled(Box)`\n  display: grid;\n  grid-gap: 0;\n  justify-items: center;\n`;\n\nexport interface MarkdownContent {\n  readonly type: 'markdown';\n  readonly value: string;\n}\n\nexport interface ReferenceItemContent {\n  readonly type: 'referenceItem';\n  readonly value: ReferenceItem;\n}\n\nexport interface ReferenceItemPageData {\n  readonly title: string;\n  readonly slug: string;\n  readonly content: ReferenceItemContent;\n  readonly current: string;\n  readonly sidebar: readonly SectionData[];\n}\n\nexport interface ReferenceItemsContent {\n  readonly type: 'referenceItems';\n  readonly value: readonly ReferenceItemPageData[];\n}\n\nexport type ContentType = MarkdownContent | ReferenceItemContent | ReferenceItemsContent;\n\ninterface Props {\n  readonly current: string;\n  readonly sidebarAlwaysVisible: boolean;\n  readonly title: string;\n  readonly content: ContentType;\n  readonly sidebar: readonly SectionData[];\n  readonly date?: string;\n  readonly link: string;\n  readonly author?: Author;\n  readonly next?: AdjacentInfo;\n  readonly previous?: AdjacentInfo;\n}\n\nexport const Content = ({\n  title,\n  current,\n  sidebarAlwaysVisible,\n  content,\n  next,\n  previous,\n  sidebar,\n  date,\n  link,\n  author,\n  ...props\n}: Props) => (\n  <StyledGrid {...props}>\n    <Helmet title={`${title} - NEO•ONE`} />\n    <LayoutWrapper omitSpacer>\n      <MainContent content={content} title={title} date={date} link={link} author={author} />\n      <Sidebar current={current} sections={sidebar} alwaysVisible={sidebarAlwaysVisible} />\n    </LayoutWrapper>\n    <DocFooter next={next} previous={previous} />\n  </StyledGrid>\n);\n","// tslint:disable no-null-keyword\nimport React from 'react';\nimport { Head } from 'react-static';\n\ninterface Props {\n  readonly title: string;\n  readonly description?: string;\n  readonly children?: React.ReactNode;\n}\n\nexport const Helmet = ({ title, description, children, ...props }: Props) => (\n  <Head\n    title={title}\n    {...props}\n    meta={[\n      { name: 'twitter:title', content: title },\n      // @ts-ignore\n      { itemprop: 'name', content: title },\n      { property: 'og:title', content: title },\n      // @ts-ignore\n      { itemprop: 'image', content: 'https://neo-one.io/social.png' },\n      { name: 'twitter:image:src', content: 'https://neo-one.io/social.png' },\n      { property: 'og:image', content: 'https://neo-one.io/social.png' },\n      { name: 'twitter:card', content: 'summary' },\n      { name: 'twitter:site', content: '@neo_one_suite' },\n      { property: 'og:url', content: 'https://neo-one.io' },\n      { property: 'og:site_name', content: 'NEO•ONE' },\n      { property: 'og:type', content: 'website' },\n    ].concat(\n      description === undefined\n        ? []\n        : [\n            { name: 'description', content: description },\n            // @ts-ignore\n            { itemprop: 'description', content: description },\n            { property: 'og:description', content: description },\n            { name: 'twitter:description', content: description },\n          ],\n    )}\n  >\n    {children}\n  </Head>\n);\n","var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n"],"sourceRoot":""}