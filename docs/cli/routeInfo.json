{"template":"/Users/tainguyen/neo-one/packages/neo-one-website/src/pages/docs","sharedHashesByProp":{},"data":{"current":"/docs/cli","title":"CLI","content":{"type":"markdown","value":"\nThe NEO•ONE CLI is your entry point for all of NEO•ONE's functionality.\n\nRun `yarn neo-one --help` to see the CLI commands available and their descriptions.\nRun `yarn neo-one <command> --help` to see what arguments are available for that command.\nRun `yarn neo-one --version` to get the version of NEO•ONE that you are running.\n\n---\n\n[[toc]]\n\n---\n\n## neo-one init\n\nInitializes a new project in the current directory. This will create a default `.neo-one.config.ts` configuration file,\na sample `Hello World` smart contract in `neo-one/contracts/HelloWorld.ts`, and a unit test in\n`src/__tests__/HelloWorld.ts`.\n\n| Argument  | Type      | Default | Description                                                                                              |\n| --------- | --------- | ------- | -------------------------------------------------------------------------------------------------------- |\n| `--react` | `boolean` | `false` | Setting this to true will generate an example. React component that uses the `HelloWorld` smart contract |\n\n---\n\n## neo-one build\n\nBuilds the project and deploys it to the local development network based on the configuration found in the\nNEO•ONE config file.\n\n| Argument  | Type      | Default | Description                                       |\n| --------- | --------- | ------- | ------------------------------------------------- |\n| `--reset` | `boolean` | `false` | Setting this to true will reset the local project |\n\n---\n\n## neo-one new\n\nCreate new resources. `neo-one new private-key` is the only available option for now, which will generate a\nnew private key.\n\n---\n\n## neo-one start\n\nStart NEO•ONE services. This command takes one argument after the command (`neo-one start <arg>`) which\ncan be either `network` or `neotracker`. `neo-one start network` will start the local development network.\n`neo-one start neotracker` will start the local NEO Tracker instance.\n\n---\n\n## neo-one stop\n\nStop NEO•ONE services. This command takes one argument after the command (`neo-one stop <arg>`) which\ncan be either `network` or `neotracker`. `neo-one stop network` will stop the local development network.\n`neo-one stop neotracker` will stop the local NEO Tracker instance.\n\n---\n\n## neo-one deploy\n\nDeploys the project using the migration file.\n\n| Argument    | Type     | Default  | Description                     |\n| ----------- | -------- | -------- | ------------------------------- |\n| `--network` | `string` | `\"test\"` | Network to run the migration on |\n\n---\n\n## neo-one info\n\nPrints the project configuration.\n\n---\n\n## neo-one compile\n\nCompiles a project's smart contracts and outputs the code to a local directory. You can set the arguments for this command\neither in the NEO•ONE config file (`.neo-one.config.ts`) or as a CLI argument. A CLI argument will override what is found in the\nconfig file. If an argument is not defined as a CLI argument and is not defined in the config file then the below defaults will be used.\n\n| Argument    | Type      | Default             | Description                                                                  |\n| ----------- | --------- | ------------------- | ---------------------------------------------------------------------------- |\n| `--outDir`  | `string`  | `neo-one/compiled`  | Directory to output the compiled code                                        |\n| `--path`    | `string`  | `neo-one/contracts` | Path to the smart contract directory                                         |\n| `--json`    | `boolean` | `true`              | Output the contract with the JSON format                                     |\n| `--avm`     | `boolean` | `false`             | Output the contract with the AVM format                                      |\n| `--debug`   | `boolean` | `false`             | Output additional debug information                                          |\n| `--opcodes` | `boolean` | `false`             | Output the AVM in a human-readable format for debugging (requires `--debug`) |\n\n---\n\n## neo-one console\n\nStarts a REPL with project contracts and NEO•ONE Client APIs.\n\n| Argument     | Type    | Default     | Description                                     |\n| ------------ | ------- | ----------- | ----------------------------------------------- |\n| `--networks` | `array` | `[\"local\"]` | Networks to initialize before starting the REPL |\n"},"link":"packages/neo-one-website/docs/0-installation/2-cli.md","sidebar":[{"title":"Installation","numbered":false,"subsections":[{"title":"Getting Started","slug":"/docs/getting-started"},{"title":"Environment Setup","slug":"/docs/environment-setup"},{"title":"CLI","slug":"/docs/cli"},{"title":"Playground","slug":"/docs/playground"}]},{"title":"Main Concepts","numbered":true,"subsections":[{"title":"Hello World","slug":"/docs/hello-world"},{"title":"Blockchain Basics","slug":"/docs/blockchain-basics"},{"title":"Smart Contract Basics","slug":"/docs/smart-contract-basics"},{"title":"Standard Library","slug":"/docs/standard-library"},{"title":"Properties and Storage","slug":"/docs/properties-and-storage"},{"title":"Methods","slug":"/docs/methods"},{"title":"Events and Logs","slug":"/docs/events-and-logs"},{"title":"Calling Smart Contracts","slug":"/docs/calling-smart-contracts"},{"title":"Client APIs","slug":"/docs/client-apis"},{"title":"Smart Contract APIs","slug":"/docs/smart-contract-apis"},{"title":"Testing","slug":"/docs/testing"},{"title":"Decentralized Apps","slug":"/docs/dapps"},{"title":"Deployment","slug":"/docs/deployment"}]},{"title":"Advanced Guides","numbered":false,"subsections":[{"title":"Native Assets","slug":"/docs/native-assets"},{"title":"Forward Values","slug":"/docs/forward-values"},{"title":"User Accounts","slug":"/docs/user-accounts"},{"title":"Extended Client APIs","slug":"/docs/extended-client-apis"},{"title":"Raw Client APIs","slug":"/docs/Raw-client-apis"},{"title":"React","slug":"/docs/react"},{"title":"Angular","slug":"/docs/angular"},{"title":"Vue","slug":"/docs/vue"},{"title":"dAPI Support","slug":"/docs/dapi-support"},{"title":"Configuration Options","slug":"/docs/config-options"}]},{"title":"Node","numbered":false,"subsections":[{"title":"Local Docker Development","slug":"/docs/node-docker"},{"title":"Kubernetes","slug":"/docs/node-kubernetes"},{"title":"Docker Compose","slug":"/docs/node-compose"},{"title":"Building From Source","slug":"/docs/node-source"},{"title":"Heroku Deployment","slug":"/docs/node-heroku"},{"title":"Configuration Reference","slug":"/docs/node-configuration"}]},{"title":"Contributing","numbered":false,"subsections":[{"title":"How to Contribute","slug":"/docs/how-to-contribute"},{"title":"Codebase Overview","slug":"/docs/codebase-overview"},{"title":"Smart Contract Compiler","slug":"/docs/smart-contract-compiler"},{"title":"Code of Conduct","slug":"/docs/code-of-conduct"}]}],"next":{"slug":"/docs/playground","title":"Playground"},"previous":{"slug":"/docs/environment-setup","title":"Environment Setup"}},"path":"docs/cli"}
