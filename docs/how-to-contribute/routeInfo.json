{"template":"/Users/tainguyen/neo-one/packages/neo-one-website/src/pages/docs","sharedHashesByProp":{},"data":{"current":"/docs/how-to-contribute","title":"How to Contribute","content":{"type":"markdown","value":"\nWelcome to the NEO•ONE community! We're always looking for more contributors and are happy to have you. This document should help make the process for contributing clear and answer some questions that you may have.\n\nPlease take a moment to review this document in order to make the contribution process easy and effective for everyone involved.\n\nFollowing these guidelines helps to communicate that you respect the time of the developers managing and developing this open source project. In return, they should reciprocate that respect in addressing your issue, assessing changes, and helping you finalize your pull requests.\n\nThis project and everyone participating in it is governed by the [Code of Conduct](/docs/code-of-conduct). By participating, you are expected to uphold this code. Please report unacceptable behavior to [contact@neo-one.io](mailto:contact@neo-one.io).\n\n---\n\n[[toc]]\n\n---\n\n## How Can I Contribute?\n\nNEO•ONE is an open source project and we love to receive contributions from our community — you! There are many ways to contribute, from writing tutorials or blog posts, improving the documentation, submitting bug reports and feature requests or writing code which can be incorporated into NEO•ONE itself.\n\nPlease, don't use the issue tracker for support questions. The [Help](/docs/getting-started#Help) section is the best place to start for getting support.\n\n### Reporting Bugs\n\nWell-written bug reports with consistently reproducible steps are invaluable to the development of NEO•ONE. Bugs are tracked as [GitHub issues](https://guides.github.com/features/issues/). Before creating an issue, please perform a [search](https://github.com/neo-one-suite/neo-one/issues?q=is%3Aopen+is%3Aissue+label%3Abug) to see if the problem has already been reported. After you've determined a bug does not already exist, create an issue and fill in the template.\n\n### Suggesting Enhancements\n\nFeature requests are welcome. But take a moment to find out whether your idea fits with the scope and aims of the project. It's up to you to make a strong case to convince the project's developers of the merits of this feature. Please provide as much detail and context as possible.\n\n### How to Get Started in the NEO•ONE Repo\n\n- Make sure you have [Node](https://nodejs.org) >= 10.16.0 installed (We recommend the latest version).\n  - Linux and Mac: We recommend using [Node Version Manager](https://github.com/creationix/nvm).\n  - Windows: We recommend using [Chocolatey](https://chocolatey.org/).\n- Install [RushJS](https://rushjs.io/) with `npm install -g @microsoft/rush`.\n  - We use RushJS for monorepo management. When you get started in the NEO•ONE repo you will use RushJS for nearly every task, like installing dependencies, building the packages, running tests, etc.\n  - For more information on RushJS, see the [docs](https://rushjs.io/pages/intro/welcome/).\n  - All Rush commands should be run inside the NEO•ONE repo.\n- Clone the repo with `git clone https://github.com/neo-one-suite/neo-one.git`.\n- Then run `rush install` to install the dependencies.\n- Then run `rush build` to build the packages. Rush will perform an \"incremental build\", which means that it will only build packages whose source files have changed since the last successful build and the packages that depend on those packages.\n- You should now be ready to start making changes to the source code. Once you're done making changes make sure to run `rush build` before running E2E tests or trying to run a bin.\n- To run all the unit tests run `rush test`. To run all the E2E tests run `rush e2e`.\n  - There are A LOT of unit tests, which can take a few minutes to run all the way through. To only run a smaller set of tests you can specify a file or blob of tests to run with `rush test -t` or `rush e2e -t`.\n  - For example, if you wanted to only run the unit tests in `neo-one-client-common` you would run `rush test -t packages/neo-one-client-common/src/__tests__/**/*`\n- If you want to test your changes with the NEO•ONE CLI run `rush build`. Then, to start the CLI you'd run `node packages/neo-one-cli/bin/neo-one.js` from inside the NEO•ONE repository. You will then be running the new NEO•ONE CLI with your changes. From there you can see your new code directly in action.\n- To see all the available RushJS commands run `rush --help`.\n\n### Your First Code Contribution\n\nUnsure where to begin contributing to NEO•ONE? Here are some great ways to get started:\n\n- Chat with us on [Discord](https://discord.gg/S86PqDE) about ways to contribute!\n- Documentation (like the text you are reading now) can always use improvement! All pages on this website include an edit button which you can click to modify the documentation.\n- Adding test coverage is a great way to get familiar with the codebase.\n- Find an existing issue with the [help wanted and good first issue](https://github.com/neo-one-suite/neo-one/issues?utf8=%E2%9C%93&q=is%3Aopen+label%3Ahelp%20wanted+label%3Agood%20first%20issue) labels.\n\nOnce you've had your first pull request approved and merged, find existing issues marked with [help wanted](https://github.com/neo-one-suite/neo-one/issues?utf8=%E2%9C%93&q=is%3Aopen+label%3Ahelp%20wanted) labels to continue contributing or suggest an enhancement. Respond on the issue thread expressing interest in working on it. This helps other people know that the issue is active, and hopefully prevents duplicated efforts.\n\n---\n\n## Pull Requests\n\n- Follow the process outlined in [GitHub Standard Fork & Pull Request Workflow](https://gist.github.com/Chaser324/ce0505fbed06b947d962) when submitting a pull request.\n- Fill in the pull request template.\n- Pre-commit hooks will run basic checks automatically.\n- Pull requests should typically be accompanied with tests. Your reviewers will request tests when appropriate if they are missing.\n\n---\n\n## License\n\nBy contributing to NEO•ONE, you agree that your contributions will be licensed under its MIT license.\n"},"link":"packages/neo-one-website/docs/4-contributing/0-how-to-contribute.md","sidebar":[{"title":"Installation","numbered":false,"subsections":[{"title":"Getting Started","slug":"/docs/getting-started"},{"title":"Environment Setup","slug":"/docs/environment-setup"},{"title":"CLI","slug":"/docs/cli"},{"title":"Playground","slug":"/docs/playground"}]},{"title":"Main Concepts","numbered":true,"subsections":[{"title":"Hello World","slug":"/docs/hello-world"},{"title":"Blockchain Basics","slug":"/docs/blockchain-basics"},{"title":"Smart Contract Basics","slug":"/docs/smart-contract-basics"},{"title":"Standard Library","slug":"/docs/standard-library"},{"title":"Properties and Storage","slug":"/docs/properties-and-storage"},{"title":"Methods","slug":"/docs/methods"},{"title":"Events and Logs","slug":"/docs/events-and-logs"},{"title":"Calling Smart Contracts","slug":"/docs/calling-smart-contracts"},{"title":"Client APIs","slug":"/docs/client-apis"},{"title":"Smart Contract APIs","slug":"/docs/smart-contract-apis"},{"title":"Testing","slug":"/docs/testing"},{"title":"Decentralized Apps","slug":"/docs/dapps"},{"title":"Deployment","slug":"/docs/deployment"}]},{"title":"Advanced Guides","numbered":false,"subsections":[{"title":"Native Assets","slug":"/docs/native-assets"},{"title":"Forward Values","slug":"/docs/forward-values"},{"title":"User Accounts","slug":"/docs/user-accounts"},{"title":"Extended Client APIs","slug":"/docs/extended-client-apis"},{"title":"Raw Client APIs","slug":"/docs/Raw-client-apis"},{"title":"React","slug":"/docs/react"},{"title":"Angular","slug":"/docs/angular"},{"title":"Vue","slug":"/docs/vue"},{"title":"dAPI Support","slug":"/docs/dapi-support"},{"title":"Configuration Options","slug":"/docs/config-options"}]},{"title":"Node","numbered":false,"subsections":[{"title":"Local Docker Development","slug":"/docs/node-docker"},{"title":"Kubernetes","slug":"/docs/node-kubernetes"},{"title":"Docker Compose","slug":"/docs/node-compose"},{"title":"Building From Source","slug":"/docs/node-source"},{"title":"Heroku Deployment","slug":"/docs/node-heroku"},{"title":"Configuration Reference","slug":"/docs/node-configuration"}]},{"title":"Contributing","numbered":false,"subsections":[{"title":"How to Contribute","slug":"/docs/how-to-contribute"},{"title":"Codebase Overview","slug":"/docs/codebase-overview"},{"title":"Smart Contract Compiler","slug":"/docs/smart-contract-compiler"},{"title":"Code of Conduct","slug":"/docs/code-of-conduct"}]}],"next":{"slug":"/docs/codebase-overview","title":"Codebase Overview"},"previous":{"slug":"/docs/node-configuration","title":"Configuration Reference"}},"path":"docs/how-to-contribute"}
